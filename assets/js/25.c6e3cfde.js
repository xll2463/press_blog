(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{545:function(s,a,t){"use strict";t.r(a);var e=t(3),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[t("strong",[s._v("数仓的分层与作用")])])]),s._v(" "),t("p",[s._v("为什么要分层？")]),s._v(" "),t("ol",[t("li",[s._v("把复杂问题简单化")]),s._v(" "),t("li",[s._v("减少重复开发")]),s._v(" "),t("li",[s._v("隔离原始数据")])]),s._v(" "),t("h2",{attrs:{id:"第一章-数仓分层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一章-数仓分层"}},[s._v("#")]),s._v(" 第一章：数仓分层：")]),s._v(" "),t("blockquote",[t("p",[s._v("ODS（Operation Data Store） 原始数据")]),s._v(" "),t("p",[s._v("DWD (data warehourse detail) 明细数据层 （经过数据清洗的业务事实明细）")]),s._v(" "),t("p",[s._v("DWS （data warehourse service）按天进行轻度汇总")]),s._v(" "),t("p",[s._v("DIM 保存维度信息，主要是对业务事实的描述信息，例如何人何时何地")]),s._v(" "),t("p",[s._v("DWT   （data warehourse Topic） 对数据进行累计汇总")]),s._v(" "),t("p",[s._v("ADS    （Application Data Store）为各种统计报表提供数据")])]),s._v(" "),t("h3",{attrs:{id:"分层的原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分层的原因"}},[s._v("#")]),s._v(" "),t("strong",[s._v("分层的原因")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1.复用 \n2.隔离原始数据 \n3.每一次只处理简单任务\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"数据集市与数据仓库区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据集市与数据仓库区别"}},[s._v("#")]),s._v(" "),t("strong",[s._v("数据集市与数据仓库区别")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("数据集市（Data Market ）是一种微型的数据仓库，是部门级的。\n\n数据仓库是企业级的，能为整个企业的各个部门的运行提供决策支持\n\n从属型数据集市：数据集市的数据来自于数据仓库\n独立型数据集市：数据集市的数据来自于数据源（没有数据集市）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"数仓命名规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数仓命名规范"}},[s._v("#")]),s._v(" 数仓命名规范：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("脚本命名\n数据源_to目标_ _ db/log.sh\n用户行为脚本以log为后缀，业务数据脚本以db为后缀。\n表字段类型\n数量类型bigint\n金额类型decimal(16,2)\n字符串 string \n主键外键类型string\n时间戳类型bigint\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"第二章数仓理论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二章数仓理论"}},[s._v("#")]),s._v(" 第二章数仓理论：")]),s._v(" "),t("h3",{attrs:{id:"函数依赖关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数依赖关系"}},[s._v("#")]),s._v(" 函数依赖关系：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1.完全函数依赖\n2.部分函数依赖\n3.传递函数依赖\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#范式"}},[s._v("#")]),s._v(" 范式")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("概念：设计一张数据表的表结构，符合的标准级别，规范和要求。\n优点：降低冗余性.\n三范式区别：\n1. 属性不可切割。\n2. 不能存在“部分函数依赖”\n3. 不能存在传递函数依赖\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"关系建模与维度建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关系建模与维度建模"}},[s._v("#")]),s._v(" 关系建模与维度建模")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("关系建模：Bill Inmon\n维度建模：Ralph Kimball\n关系建模将复杂的数据抽象为两个概念——实体和关系，并使用规范化的方式表示出来。\n关系建模完全遵守第三范式，数据冗余程度低，数据的一致性容易得到保证。由于数据分布于众多的表中，查询会相对复杂，在大数据的场景下，查询效率相对较低。\n\n维度模型以数据分析作为出发点，不遵循三范式，故数据存在一定的冗余。维度模型面向业务，将业务用事实表和维度表呈现出来。表结构简单，故查询简单，查询效率较高。\n维度模型以数据分析为出发点，不遵循三大范式，数据存在一定冗余，\n但是join更少，shffle更少，处理就更快。\n维度建模将各种表整理成两种：事实表和维度表。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h3",{attrs:{id:"维度表和事实表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#维度表和事实表"}},[s._v("#")]),s._v(" 维度表和事实表")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("维度表：\n特征：\n1. 范围很宽（具有多个属性，列比较宽）\n2. 跟事实表相比，行数相对较小：通常<10万条\n3. 内容相对固定\n时间维度表的好处：\n  具有历史数据，多了时间维度，可以分析成时间的图表\n 按照维度表时间进行分组，按照事实表的度量值进行求和。\n事实表：\n事实表中的每行数据代表一个业务事件（下单，支付，退款，评价等），事实表示的是业务时间的度量值。\n特征：\n1. 非常的大\n2. 内容相对的窄，列数较少（主要是外键和度量值）\n3. 经常发生变化，每天会新增加很多。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h3",{attrs:{id:"事实表的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事实表的分类"}},[s._v("#")]),s._v(" 事实表的分类")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1. 事务性事实表表示一个业务事件，写入后就不会发生变化。（评价，同步策略：增量同步），按天分区，存到每天的内容。2. 周期型快照事实表不会保留所有数据，只保留固定时间间隔的数据。适用于不关系明细操作，只关心结果，例如购物车，销售额，每月的账户余额。3. 累积性快照事实表跟踪业务事实的变化。（同步策略：增量同步）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"维度模型分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#维度模型分类"}},[s._v("#")]),s._v(" "),t("strong",[s._v("维度模型分类")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("区别：主要在于维度的层级，标准的星型模型维度只有一层，而雪花模型可能会涉及多级。雪花模型，比较接近3NF,但无法完全遵守，因为遵循的话成本太高。1. 星型模型：性能优先2. 雪花模型;灵活度更优先3. 星座模型：   星座模型基于多个事实表，共用一些维度。模型的选择：更倾向于维度更少星型模型\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("day2")]),s._v(" "),t("p",[t("strong",[s._v("3.1.1 Hive****引擎简介")])]),s._v(" "),t("p",[s._v("Hive引擎包括：默认MR、tez、spark")]),s._v(" "),t("p",[s._v("Hive on Spark：Hive既作为存储元数据又负责SQL的解析优化，语法是HQL语法，执行引擎变成了Spark，Spark负责采用RDD执行。")]),s._v(" "),t("p",[s._v("Spark on Hive : Hive只作为存储元数据，Spark负责SQL解析优化，语法是Spark SQL语法，Spark负责采用RDD执行。")]),s._v(" "),t("h2",{attrs:{id:"数仓搭建-ods层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数仓搭建-ods层"}},[s._v("#")]),s._v(" 数仓搭建-ODS层")]),s._v(" "),t("h2",{attrs:{id:"数仓搭建-dim层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数仓搭建-dim层"}},[s._v("#")]),s._v(" 数仓搭建-DIM层")]),s._v(" "),t("p",[s._v("回顾：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("数据类型 array<string> map<string,string> struct<id:int ,name:string>构造：array(val1,val2,....)\\map(key1,value1,key2,value2)//第一参数str,第二三参数分隔符str_to_map(text[,delimited1,delimited])struct(val1,val2,val3,...)named_struct(name1,val1,name2,val2,..)取值：array:arry[0]map：map[key]struct:struct.name\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("sku:完全的 spu 简单描述")]),s._v(" "),t("p",[s._v("为什么不能把平台属性和销售属性放到数据中？")]),s._v(" "),t("p",[s._v("答：不同的商品的平台属性数据结构不同。")]),s._v(" "),t("p",[s._v("商品维度表：每天全量商品数据。分区规划。")]),s._v(" "),t("p",[s._v("存储格式：parquet列式存储，同一列用的lzo压缩。")])]),s._v(" "),t("p",[s._v("数据装载")]),s._v(" "),t("p",[s._v("select ods*,")]),s._v(" "),t("p",[s._v("from ods_sku_info")]),s._v(" "),t("p",[s._v("where dt='2020-06-14'")]),s._v(" "),t("p",[s._v("insert overwrite")]),s._v(" "),t("p",[s._v("时间维度表。")]),s._v(" "),t("p",[s._v("缓慢变化维：做拉链表。")]),s._v(" "),t("h2",{attrs:{id:"数仓搭建-dwd层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数仓搭建-dwd层"}},[s._v("#")]),s._v(" 数仓搭建-DWD层")]),s._v(" "),t("p",[s._v("日志来源分类：")]),s._v(" "),t("p",[s._v("页面埋点日志")]),s._v(" "),t("p",[s._v("启动日志：")]),s._v(" "),t("p",[s._v("一共包含五种类型信息：页面日志曝光日志动作日志，启动日志，错误日志")]),s._v(" "),t("p",[s._v("按内容去解析分表，不按结构解析分表")]),s._v(" "),t("p",[s._v("用户行为日志：\n启动日志表：需要common+ts+启动日志。")]),s._v(" "),t("p",[s._v("common是维度退化到事实表中。")]),s._v(" "),t("p",[s._v("字符串转换 正则性能低。")]),s._v(" "),t("p",[s._v("错误日志：")]),s._v(" "),t("p",[s._v("确认事实表=>声明密度=>确定维度->确认事实(度量值)。")]),s._v(" "),t("p",[s._v("udtf")]),s._v(" "),t("p",[s._v("数据和对象是分离的，数据保存在java的object对象中，类型保存在object inspector(对象检查器)中。")]),s._v(" "),t("p",[s._v("isnew 辅助作为新增访客的判断。")]),s._v(" "),t("p",[s._v("新增用户:")]),s._v(" "),t("p",[s._v("来源于业务日志，根据create_time统计。count()")]),s._v(" "),t("p",[s._v("新增访客：")]),s._v(" "),t("p",[s._v("来源于用户行为日志。")]),s._v(" "),t("p",[s._v("安装应用后，启动的首日")]),s._v(" "),t("p",[s._v("只用isnew 会出现误判，卸载重装后isnew是 1，")]),s._v(" "),t("h2",{attrs:{id:"dwt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dwt"}},[s._v("#")]),s._v(" dwt")]),s._v(" "),t("p",[s._v("dws:当天的活跃用户的行为。")]),s._v(" "),t("p",[s._v("dwt:截至到当天的全量用户的累计行为。")]),s._v(" "),t("p",[s._v("时效性。没有必要保留全部分区，只保留最新的两个分区。只能手动清理。")]),s._v(" "),t("p",[s._v("为什么两个分区？")]),s._v(" "),t("p",[s._v("怎样手动清理？")]),s._v(" "),t("p",[s._v("用户主题表的数据装载：")]),s._v(" "),t("p",[s._v("day1：拿到dws的全表，进行汇总统计，放到dwt层的6-14号分区，")]),s._v(" "),t("p",[s._v("day2:将6-14号的dwt层数据加上6-15号的dws层数据。")]),s._v(" "),t("p",[s._v("清理元数据，并删除hdfs上的表。")]),s._v(" "),t("h2",{attrs:{id:"数仓搭建-ads层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数仓搭建-ads层"}},[s._v("#")]),s._v(" 数仓搭建-ads层")]),s._v(" "),t("h3",{attrs:{id:"建表说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建表说明"}},[s._v("#")]),s._v(" 建表说明:")]),s._v(" "),t("p",[s._v("ADS层不涉及建模，建表根据具体需求而定。")]),s._v(" "),t("h3",{attrs:{id:"访客主题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访客主题"}},[s._v("#")]),s._v(" 访客主题")]),s._v(" "),t("h4",{attrs:{id:"访客统计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访客统计"}},[s._v("#")]),s._v(" 访客统计")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("指标")]),s._v(" "),t("th",[s._v("说明")]),s._v(" "),t("th",[s._v("对应字段")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("访客数")]),s._v(" "),t("td",[s._v("统计访问人数")]),s._v(" "),t("td",[s._v("uv_count")])]),s._v(" "),t("tr",[t("td",[s._v("页面停留时长")]),s._v(" "),t("td",[s._v("统计所有页面访问记录总时长，以秒为单位")]),s._v(" "),t("td",[s._v("duration_sec")])]),s._v(" "),t("tr",[t("td",[s._v("平均页面停留时长")]),s._v(" "),t("td",[s._v("统计每个会话平均停留时长，以秒为单位")]),s._v(" "),t("td",[s._v("avg_duration_sec")])]),s._v(" "),t("tr",[t("td",[s._v("页面浏览总数")]),s._v(" "),t("td",[s._v("统计所有页面访问记录总数")]),s._v(" "),t("td",[s._v("page_count")])]),s._v(" "),t("tr",[t("td",[s._v("平均页面浏览数")]),s._v(" "),t("td",[s._v("统计每个会话平均浏览页面数")]),s._v(" "),t("td",[s._v("avg_page_count")])]),s._v(" "),t("tr",[t("td",[s._v("会话总数")]),s._v(" "),t("td",[s._v("统计会话总数")]),s._v(" "),t("td",[s._v("sv_count")])]),s._v(" "),t("tr",[t("td",[s._v("跳出数")]),s._v(" "),t("td",[s._v("统计只浏览一个页面的会话个数")]),s._v(" "),t("td",[s._v("bounce_count")])]),s._v(" "),t("tr",[t("td",[s._v("跳出率")]),s._v(" "),t("td",[s._v("只有一个页面的会话的比例")]),s._v(" "),t("td",[s._v("bounce_rate")])])])]),s._v(" "),t("p",[t("strong",[s._v("建表语句")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" ads_visit_stats"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" EXTERNAL "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" ads_visit_stats "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("dt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" STRING "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'统计日期'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("is_new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" STRING "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'新老标识,1:新,0:老'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("recent_days"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BIGINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'最近天数,1:最近1天,7:最近7天,30:最近30天'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" STRING "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'渠道'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("uv_count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BIGINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'日活(访问人数)'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("duration_sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BIGINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'页面停留总时长'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("avg_duration_sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BIGINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'一次会话，页面停留平均时长,单位为描述'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("page_count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BIGINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'页面总浏览数'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("avg_page_count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BIGINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'一次会话，页面平均浏览数'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sv_count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BIGINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'会话次数'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("bounce_count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BIGINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'跳出数'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("bounce_rate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECIMAL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'跳出率'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'访客统计'")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROW")]),s._v(" FORMAT DELIMITED "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FIELDS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TERMINATED")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v("LOCATION "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/warehouse/gmall/ads/ads_visit_stats/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("为什么不列式存储，不压缩，不分区？")])]),s._v(" "),t("p",[s._v("答：数据量非常少，没必要每天分区，列式存储，压缩。")]),s._v(" "),t("p",[t("strong",[s._v("分析技巧")]),s._v("：")]),s._v(" "),t("p",[s._v("先分出建表语句的维度和度量值，不考虑维度，查询出所有的，然后根据维度去分组。")]),s._v(" "),t("p",[t("strong",[s._v("思路")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1. 划分会话、mid+ts(会话的起始时间) ，mid是为了区分不同访客，ts是为了区分相同访客的不同会话，确定唯一值。需要使用开窗函数：first_value 获取每个会话的起始时间。（第一个参数cloum,第二个参数是否跳过null值）last_value2. 统计每个会话的浏览时长，浏览数3. 统计上述指标。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" overwrite "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" ads_visit_stats  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 使用insert into 是追加是针对于hive来说的，但是对于hdfs来说有很多小文件，不合适。select * from ads_visit_stats-- union all                  -- hive底层有优化操作，使用union all不去重，就不会去读表在union all等于 insert into ,还是会有小文件。unionselect * from ccc; -- 上面查出来的表。-- 有的时候使用decimal，当count求值的时候会自动将double强转为decimal，所以存进去，但是使用union比较的时候却是不同的，导致表中有重复数据-- 解决办法：我们查询的时候就直接强转为decimal.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("sankey(桑基图)")]),s._v(" "),t("h4",{attrs:{id:"路径分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路径分析"}},[s._v("#")]),s._v(" 路径分析")]),s._v(" "),t("p",[s._v("桑基图需要我们提供每种页面跳转的次数，每个跳转由source/target表示，source指跳转起始页面，target表示跳转终到页面。")]),s._v(" "),t("p",[t("strong",[s._v("思路分析")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("该需求要统计的就是每种跳转的次数，故理论上对source/target进行分组count()即可。统计时需注意以下两点： 第一点：桑基图的source不允许为空，但target可为空。 第二点：桑基图所展示的流程不允许存在环。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"商品主题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#商品主题"}},[s._v("#")]),s._v(" 商品主题")]),s._v(" "),t("h4",{attrs:{id:"商品统计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#商品统计"}},[s._v("#")]),s._v(" 商品统计")]),s._v(" "),t("h4",{attrs:{id:"品牌复购率"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#品牌复购率"}},[s._v("#")]),s._v(" 品牌复购率")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("购买以下单为准，不是以支付\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"订单主题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#订单主题"}},[s._v("#")]),s._v(" 订单主题")]),s._v(" "),t("p",[s._v("该需求包含订单总数，订单金额和下单总人数。")]),s._v(" "),t("p",[s._v("用户dwt表，地区dwt表，")]),s._v(" "),t("p",[s._v("GMV")]),s._v(" "),t("p",[s._v("history")]),s._v(" "),t("p",[s._v("!759")]),s._v(" "),t("p",[s._v("schedure：定时调度器。")]),s._v(" "),t("h2",{attrs:{id:"azkaban"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#azkaban"}},[s._v("#")]),s._v(" azkaban")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Azkaban is a batch workflow job scheduler工作流程定时调度器\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[s._v("#")]),s._v(" 架构：")]),s._v(" "),t("p",[s._v("webserver  :用户管理，项目管理，工作界面，监控工作流程执行状态，定时。")]),s._v(" "),t("p",[s._v("execserver:是用来执行任务的，可以部署多个")]),s._v(" "),t("p",[s._v("mysql：定时信息，存储工作流程配置信息，监控的执行状态。")]),s._v(" "),t("h3",{attrs:{id:"部署模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署模式"}},[s._v("#")]),s._v(" 部署模式：")]),s._v(" "),t("h4",{attrs:{id:"单机模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单机模式"}},[s._v("#")]),s._v(" 单机模式：")]),s._v(" "),t("p",[s._v("只需要启动一个进程，webserver +execserver在一个机器")]),s._v(" "),t("h4",{attrs:{id:"集群模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群模式"}},[s._v("#")]),s._v(" 集群模式：")]),s._v(" "),t("p",[s._v("webserver 和execserver在不同机器，execserver可以有多个，并行，容错。")]),s._v(" "),t("h4",{attrs:{id:"部署和注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署和注意事项"}},[s._v("#")]),s._v(" 部署和注意事项：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('注意：1. source sql，就是执行sql2. exec每次启动都得启动，然后激活。3. 启动必须进入etec路径才能启动，为甚？会通过相对路径找conf的properties，所以必须在那个路径启动。4.启动azkaban，会在mysql的executors创建字段，关闭会删除，所以要安全关闭，否则可能出现问题curl -G "hadoop102:12321/executor?action=activate" && echo   //向executor发送请求激活。如果关闭不了，可能是重复启动了azkanban，需要jps拿到进程的pid，然后修改currentpid文件的id，在正常关闭。\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"helloword案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helloword案例"}},[s._v("#")]),s._v(" helloword案例")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#第一个配置文件  azkaban.projectakaban-flow-version:2.0    //工作流程配置文件版本是2.0是yarn语法，1.0是properties#第二个配置文件  basic.flownodes:  - name: jobA    type: command    config:      command: echo "Hello World"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("FlowLog:整个azkaban的log,")]),s._v(" "),t("p",[s._v("JobList的job logs 可以查看错误信息。")]),s._v(" "),t("h2",{attrs:{id:"kylin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kylin"}},[s._v("#")]),s._v(" Kylin")]),s._v(" "),t("h3",{attrs:{id:"kylin简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kylin简介"}},[s._v("#")]),s._v(" Kylin简介")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("GB-PB不考虑使用kylin,数据量很大的时候，采用预计算，多维分析我们的数据，实现亚秒级别的查询数据，查询延迟始终保持在一个较低的水平。  \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"kylin术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kylin术语"}},[s._v("#")]),s._v(" Kylin术语：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1.BI(商业智能):将企业中现有的数据转化为知识，帮助企业做出明智选择。为了将数据转化为知识，需要利用数据仓库，联机分析处理(OLCP)工具和数据挖掘数据。2.OLAP:从不同的维度分析，各个方面观察信息，因此OLAP也称为多维分析。2的n次方-1，n代表的是维度字段，表示一共有多少种表示形式。3.OLAP类型：ROLAP:基于关系型数据库，生成执行计划，执行sql,不需要预计算。MOLAP:基于多维数据集，需要预处理。4.OLAP Cube:MOLAP基于多维数据集，一个多维数据集称为一个OLAP Cube。后续查询数据是根据Cube中去查询。Cuboid:表示的穷举法中的单个。所有的Cuboid加在一起是Cube。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"架构-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#架构-2"}},[s._v("#")]),s._v(" 架构：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("根据数据源来判断是离线还是实时。hive是离线，kafka是实时。REST Server(REST服务层)  //Web APP  JDBC/ODBCQuery Engine(查询引擎层)  // 查询用的Routing(路由层)  //不用，关闭。在hbase查询不到的到数据源，到数据源去查询.Metadata(元数据)Cube Build Engine(Cube构建引擎)从hive中取数据，然后通过cube构建引擎存储在hbase中HBase:海量数据的存储引擎，可以随机读写，对随机读写做了大量的优化。HDFS不支持随机读写。概念： 上卷:降维.下钻:添加维度.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"kylin特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kylin特点"}},[s._v("#")]),s._v(" Kylin特点")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1.标准sql接口.多维数据集2.支持超大数据集:对大数据的支撑能力是目前技术中最先进的.百亿级别秒级查询3.亚秒级响应.4.可伸缩性和高吞吐率:单节点Kylin可实现每秒70个查询,可以搭建Kylin的集群.5.BI工具集成.为了展示效果的.给企业使用的知识.具体包括如下内容:ODBC：与Tableau、Excel、PowerBI等工具集成JDBC：与Saiku、BIRT等Java工具集成RestAPI：与JavaScript、Web网页集成\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" Kylin兼容性问题  修改/opt/module/kylin/bin/find-spark-dependency.sh，排除冲突的jar包 需要增加的内容：! -name '*jackson*' ! -name '*metastore*'  用户名为：ADMIN，密码为：KYLINjps -mlfree -h\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),t("h4",{attrs:{id:"创建工程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建工程"}},[s._v("#")]),s._v(" 创建工程")]),s._v(" "),t("h4",{attrs:{id:"获取数据源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取数据源"}},[s._v("#")]),s._v(" 获取数据源")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("注意事项：Kylin不能处理Hive表中的复杂数据类型（Array,Map,Struct）,即便复杂类型的字段并未参与到计算之中。故在加载Hive数据源时，不能直接加载带有复杂数据类型字段的表。而在dim_sku_info表中存在两个复杂数据类型的字段（平台属性和销售属性），故dim_sku_info不能直接加载，需对其进行以下处理。（1）在hive客户端创建一个视图，如下。该视图已经将dim_sku_info表中的复杂数据类型的字段去掉，在后续的计算中，不再使用dim_sku_info，而使用dim_sku_info_view。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"创建model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建model"}},[s._v("#")]),s._v(" 创建model")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("创建星型模型 1.确定事实表2.选择维度表和已存在的事实表关联，确定join on的字段，jion关联方式和hive中必须相同。重复key问题：事实表与维度表关联的主键，维度表是每日全量和拉链表都会出现重复key问题，这时候还需要我们自己解决。解决办法：通过建立维度表的视图view,事实表去关联全量最新的维度表，就不会有相同key了。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"kylin自动构建cube"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kylin自动构建cube"}},[s._v("#")]),s._v(" kylin自动构建cube")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("通过kylin的REST API 构建shell脚本，来自动构建cube.utc时间：1970年0分0秒到现在的秒数。默认转的0时区，我们是东8区。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"cube构建原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cube构建原理"}},[s._v("#")]),s._v(" Cube构建原理")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("维度和度量cube和cuboidcube存储原理：维度字典表：正常来说如果维度值比较长，会消耗多余的性能io，HBase的存储方式为：Rowkey: KEY是：Cuboid id +维度值。底层存储的是16进制的。value是聚合的度量值。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"构建算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建算法"}},[s._v("#")]),s._v(" 构建算法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1）逐层构建算法逐层降维。每个mr执行一个维度。串行执行，比较慢2）快速构建算法使用一个MR,在map端完成所有的维度计算完成，将结果发送到reduce中，reduce将所有的计算完成的再聚合。构建算法参数有三个值：一个逐层，一个快速，一个自动\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"kylin-cube构建优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kylin-cube构建优化"}},[s._v("#")]),s._v(" Kylin Cube构建优化")]),s._v(" "),t("h4",{attrs:{id:"_1-使用衍生维度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用衍生维度"}},[s._v("#")]),s._v(" 1."),t("strong",[s._v("使用衍生维度")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("衍生维度用于在有效维度内将维度表上的非主键维度排除掉，并使用维度表的主键（其实是事实表上相应的外键）来替代它们。Kylin会在底层记录维度表主键与维度表其他维度之间的映射关系，以便在查询时能够动态地将维度表的主键“翻译”成这些非主键维度，并进行实时聚合。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("虽然衍生维度具有非常大的吸引力，但这也并不是说所有维度表上的维度都得变成衍生维度，如果从维度表主键到某个维度表维度所需要的聚合工作量非常大，则不建议使用衍生维度。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"_2-使用聚合组-aggregation-group"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用聚合组-aggregation-group"}},[s._v("#")]),s._v(" 2."),t("strong",[s._v("使用聚合组（Aggregation group）")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("强大的剪枝工具。将没有意义的聚合组删除。1.强制维度2.层级维度：A>B作为层级维度，表示的是b中只包含a，和其他所有。3.联合维度：[ab] AB要么同时出现要么不出现。减少计算量。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"_3-row-key的优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-row-key的优化"}},[s._v("#")]),s._v(" 3.row key的优化")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1.被用作过滤的维度放在前面查询更快2.基数大的维度放在基数小的前面kylin选择的是cuboid id小的，基数小的放后面，那样cuboid id 选择的也就是基数小的计算更快\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"即时bi查询展示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#即时bi查询展示"}},[s._v("#")]),s._v(" 即时BI查询展示")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("JDBCZeeppelin\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"即时查询-presto"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#即时查询-presto"}},[s._v("#")]),s._v(" 即时查询-Presto")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("不是数据库，能解析sql，不是mysql，oracle的替代品，不能处理在线事务oltp。olap:联机分析处理oltp:联机事务处理可执行jar：记录了main方法的入口位置。实际上一个脚本，里面执行了java -jar 查询添加lzo索引的表，需要将lzo索引的jar放入presto的plgins下的hive-hadoop2中。plgins下放的是他需要的依赖。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"presto优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#presto优化"}},[s._v("#")]),s._v(" Presto优化")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1.合理设置分区2.hive中创建Presto使用的表时候，建议采用ORC格式存储。相比于Parquet,Presto对RPC更加友好。3.使用压缩 snappy.4.查询只选择使用的字段。5.能用分区作为过滤条件，尽量用分区。6.合理安排group by 中语句字段顺序。7.order by 尽量使用limit8.join语句将大表放到左边\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"presto注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#presto注意事项"}},[s._v("#")]),s._v(" Presto注意事项")]),s._v(" "),t("div",{staticClass:"language-mysql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1. 字段名引用避免和关键字冲突：MySQL对字段加反引号`、Presto对字段加双引号分割当然，如果字段名称不是关键字，可以不加这个双引号。2. 时间函数对于Timestamp，需要进行比较的时候，需要添加Timestamp关键字，而MySQL中对Timestamp可以直接进行比较。/*MySQL的写法*/SELECT t FROM a WHERE t > '2017-01-01 00:00:00'; /*Presto中的写法*/SELECT t FROM a WHERE t > timestamp '2017-01-01 00:00:00';3.不支持INSERT OVERWRITE语法Presto中不支持insert overwrite语法，只能先delete，然后insert into。4 PARQUET格式Presto目前支持Parquet格式，支持查询，但不支持insert。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"zabbix入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zabbix入门"}},[s._v("#")]),s._v(" Zabbix入门")]),s._v(" "),t("h3",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1.能监控硬件资源和软件资源。2.使用灵活的通知机制，允许用户为几乎任何事件配置基于邮件的报警机制。3.基于监控的数据，提供出色的报告和数据可视化功能。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("先创建模板，或者使用现成的模板，添加到要监控的主机上")]),s._v(" "),t("h2",{attrs:{id:"kerberos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kerberos"}},[s._v("#")]),s._v(" Kerberos")]),s._v(" "),t("h3",{attrs:{id:"_1-1概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1概述"}},[s._v("#")]),s._v(" 1.1概述")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Kerberos是一种计算机网络认证协议，用来在非安全网络中，对个人通信以安全的手段进行身份认证。这个词又指麻省理工学院为这个协议开发的一套计算机软件。软件设计上采用客户端/服务器结构，并且能够进行相互认证，即客户端和服务器端均可对对方进行身份认证。可以用于防止窃听、防止重放攻击、保护数据完整性等场合，是一种应用对称密钥体制进行密钥管理的系统。使用的是kerberos协议。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_1-2术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2术语"}},[s._v("#")]),s._v(" 1.2术语")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1. KDC:密钥分发中心，负责存储用户信息，管理发放票据。 //服务2.Realm:Kerberor所管理的领域。（一系列的服务和一系列的用户）域名3.Rrincipal:Kerberos所管理的一个用户或者服务，可以理解kerberos管理的一个账号，格式：primary/instance@realmprimary:用户名称/服务名称instance:主机名realm：域名4.keytab:密钥文件。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_1-3认证原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3认证原理"}},[s._v("#")]),s._v(" 1.3认证原理")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1. 客户端输入一个命令kinit,相当于登录命令，输入用户名和密码（Principal）2.AS（认证服务器）认证了之后，想client发送一个TGT,申请ticket的ticket3.client拿着缓存的ticket去访问TGS(票证授权服务器)4.TGS验证TGT的ticket,然后去database查询一下服务是不是通的,通过的话，返回一个serverticket.5.客户端就可以和服务交互了。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);