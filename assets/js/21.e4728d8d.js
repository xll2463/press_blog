(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{538:function(t,a,r){"use strict";r.r(a);var s=r(3),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"title"}),r("p",[t._v("SpringCloud最新教程IDEA版【狂神说Java系列】学习笔记")])]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.bilibili.com/video/av76020761",target:"_blank",rel:"noopener noreferrer"}},[t._v("视频链接"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_1-这个阶段该如何学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-这个阶段该如何学习"}},[t._v("#")]),t._v(" 1. 这个阶段该如何学习")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://blog.csdn.net/liqi_q/article/details/80557157",target:"_blank",rel:"noopener noreferrer"}},[t._v("maven模块化项目总共模块相互引用打包失败问题"),r("OutboundLink")],1),t._v(" 很重要，说三遍，而且容易忘记，用了旧版的jar包！")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/liqi_q/article/details/80557157",target:"_blank",rel:"noopener noreferrer"}},[t._v("maven模块化项目总共模块相互引用打包失败问题"),r("OutboundLink")],1),t._v(" 很重要，说三遍，而且容易忘记，用了旧版的jar包！")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/liqi_q/article/details/80557157",target:"_blank",rel:"noopener noreferrer"}},[t._v("maven模块化项目总共模块相互引用打包失败问题"),r("OutboundLink")],1),t._v(" 很重要，说三遍，而且容易忘记，用了旧版的jar包！")])]),t._v(" "),r("h3",{attrs:{id:"回顾之前的知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回顾之前的知识"}},[t._v("#")]),t._v(" 回顾之前的知识")]),t._v(" "),r("ul",[r("li",[t._v("JavaSE")]),t._v(" "),r("li",[t._v("数据库")]),t._v(" "),r("li",[t._v("前端")]),t._v(" "),r("li",[t._v("Servlet")]),t._v(" "),r("li",[t._v("Http")]),t._v(" "),r("li",[t._v("Mybatis")]),t._v(" "),r("li",[t._v("Spring")]),t._v(" "),r("li",[t._v("SpringMVC")]),t._v(" "),r("li",[t._v("SpringBoot")]),t._v(" "),r("li",[t._v("Dubbo、Zookeeper、分布式基础")]),t._v(" "),r("li",[t._v("Maven、Git")]),t._v(" "),r("li",[t._v("Ajax、Json")])]),t._v(" "),r("h3",{attrs:{id:"串一下自己会的东西"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#串一下自己会的东西"}},[t._v("#")]),t._v(" 串一下自己会的东西")]),t._v(" "),r("ul",[r("li",[t._v("数据库")]),t._v(" "),r("li",[t._v("Mybatis")]),t._v(" "),r("li",[t._v("Spring")]),t._v(" "),r("li",[t._v("SpringMVC")]),t._v(" "),r("li",[t._v("SpringBoot")]),t._v(" "),r("li",[t._v("Dubbo、Zookeeper、分布式基础")]),t._v(" "),r("li",[t._v("Maven、Git")]),t._v(" "),r("li",[t._v("Ajax、Json")])]),t._v(" "),r("h3",{attrs:{id:"这个阶段如何学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#这个阶段如何学习"}},[t._v("#")]),t._v(" 这个阶段如何学习")]),t._v(" "),r("div",{staticClass:"language-none line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("技术选型演变、发展\n\n三层架构 + MVC\n\n框架：\n\tSpring IOC AOP\n\t\n\tSpringBoot，新一代的JavaEE开发标准，自动装配\n\t\n\t服务/功能拆分、模块化~ 过去是all in one\n\t\n\t模块的开发===all in one,代码没变化~\n\t\n微服务架构4个核心问题？\n\t1. 服务很多，客户端该怎么访问（负载均衡、热备）\n\t2. 这么多服务？服务之间如何通信？（HTTP或RPC）\n\t3. 这么多的服务？如何治理？（服务注册与发现机制，即注册中心）\n\t4. 服务挂了怎么办？(容灾)\n\t\n解决方案：\n\tSpring Cloud 生态\n\t\n\t1. Spring Cloud NetFlix 一站式解决方案\n\t\t客户端和服务器之间需要经过API Gateway，api网关，zuul组件\n\t\tFeign ---HttpClient ---- Http通信方式，同步，阻塞\n\t\t服务注册与发现：Eureka\n\t\t熔断机制：Hystrix\n\t\n\t2. Apache Dubbo ZooKeeper 半自动，需要整合别人的\n\t\tAPI:没有，找第三方组件，或者自己实现（自己实现不难）\n\t\tDubbo：java的RPC框架\n\t\tZooKeeper\n\t\t熔断机制：节主Hystrix\n\t\t\n\t\tDubbo这个方案并不完善~毕竟本身只是为了Java的PRC框架\n\t\n\t3. Spring Cloud Alibaba 一站式解决方案！更简单\n\t\t\n\t\t\n新概念：服务网站~ Server Mesh\n\tistio\n\t\n\n万变不离其宗\n\t1. API\n\t2. HTTP,RPC\n\t3. 注册和发现\n\t4. 熔断机制\n\t\n网络不可靠！（本质原因）\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br"),r("span",{staticClass:"line-number"},[t._v("9")]),r("br"),r("span",{staticClass:"line-number"},[t._v("10")]),r("br"),r("span",{staticClass:"line-number"},[t._v("11")]),r("br"),r("span",{staticClass:"line-number"},[t._v("12")]),r("br"),r("span",{staticClass:"line-number"},[t._v("13")]),r("br"),r("span",{staticClass:"line-number"},[t._v("14")]),r("br"),r("span",{staticClass:"line-number"},[t._v("15")]),r("br"),r("span",{staticClass:"line-number"},[t._v("16")]),r("br"),r("span",{staticClass:"line-number"},[t._v("17")]),r("br"),r("span",{staticClass:"line-number"},[t._v("18")]),r("br"),r("span",{staticClass:"line-number"},[t._v("19")]),r("br"),r("span",{staticClass:"line-number"},[t._v("20")]),r("br"),r("span",{staticClass:"line-number"},[t._v("21")]),r("br"),r("span",{staticClass:"line-number"},[t._v("22")]),r("br"),r("span",{staticClass:"line-number"},[t._v("23")]),r("br"),r("span",{staticClass:"line-number"},[t._v("24")]),r("br"),r("span",{staticClass:"line-number"},[t._v("25")]),r("br"),r("span",{staticClass:"line-number"},[t._v("26")]),r("br"),r("span",{staticClass:"line-number"},[t._v("27")]),r("br"),r("span",{staticClass:"line-number"},[t._v("28")]),r("br"),r("span",{staticClass:"line-number"},[t._v("29")]),r("br"),r("span",{staticClass:"line-number"},[t._v("30")]),r("br"),r("span",{staticClass:"line-number"},[t._v("31")]),r("br"),r("span",{staticClass:"line-number"},[t._v("32")]),r("br"),r("span",{staticClass:"line-number"},[t._v("33")]),r("br"),r("span",{staticClass:"line-number"},[t._v("34")]),r("br"),r("span",{staticClass:"line-number"},[t._v("35")]),r("br"),r("span",{staticClass:"line-number"},[t._v("36")]),r("br"),r("span",{staticClass:"line-number"},[t._v("37")]),r("br"),r("span",{staticClass:"line-number"},[t._v("38")]),r("br"),r("span",{staticClass:"line-number"},[t._v("39")]),r("br"),r("span",{staticClass:"line-number"},[t._v("40")]),r("br"),r("span",{staticClass:"line-number"},[t._v("41")]),r("br"),r("span",{staticClass:"line-number"},[t._v("42")]),r("br"),r("span",{staticClass:"line-number"},[t._v("43")]),r("br"),r("span",{staticClass:"line-number"},[t._v("44")]),r("br"),r("span",{staticClass:"line-number"},[t._v("45")]),r("br"),r("span",{staticClass:"line-number"},[t._v("46")]),r("br"),r("span",{staticClass:"line-number"},[t._v("47")]),r("br"),r("span",{staticClass:"line-number"},[t._v("48")]),r("br"),r("span",{staticClass:"line-number"},[t._v("49")]),r("br"),r("span",{staticClass:"line-number"},[t._v("50")]),r("br")])]),r("blockquote",[r("p",[r("a",{attrs:{href:"https://blog.csdn.net/whoamiyang/article/details/51901888",target:"_blank",rel:"noopener noreferrer"}},[t._v("轻松理解MYSQL MVCC 实现机制"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_35642036/article/details/84191697",target:"_blank",rel:"noopener noreferrer"}},[t._v("负载均衡与双机热备"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_35620501/article/details/92693398",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringCloud（一）：SpringCloud和Dubbo的对比"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_35001776/article/details/78498430",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dubbo和Nginx的区别"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/baf966931c32",target:"_blank",rel:"noopener noreferrer"}},[t._v("zookeeper 都有哪些使用场景？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/neosmith/article/details/92790681",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vert.x与Netty的区别"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/fsy9595887/article/details/84521681",target:"_blank",rel:"noopener noreferrer"}},[t._v("微服务中的熔断机制"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/guwei9111986/article/details/51649240",target:"_blank",rel:"noopener noreferrer"}},[t._v("谈谈我对服务熔断、服务降级的理解"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/didispace/p/10675601.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Alibaba到底坑不坑？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://developer.aliyun.com/article/718349",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Alibaba实战(一) - 概述"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/stay-foolisher/p/10422971.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ServiceMesh简介"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("SOA和微服务等概念")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/zpoison/article/details/80729052",target:"_blank",rel:"noopener noreferrer"}},[t._v("SOA架构和微服务架构的区别"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"常见面试题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常见面试题"}},[t._v("#")]),t._v(" 常见面试题")]),t._v(" "),r("ol",[r("li",[t._v("什么是微服务？")]),t._v(" "),r("li",[t._v("微服务之间是如何独立通讯的？")]),t._v(" "),r("li",[t._v("SpringCloug和Dubbo有哪些区别？")]),t._v(" "),r("li",[t._v("SpringBoot和SpringCloud，请你谈谈对他们的理解")]),t._v(" "),r("li",[t._v("什么是服务熔断？什么是服务降级")]),t._v(" "),r("li",[t._v("微服务的优缺点分别是什么？说下你在项目开发中遇到的坑")]),t._v(" "),r("li",[t._v("你所知道的微服务技术栈有哪些？请列举一二")]),t._v(" "),r("li",[t._v("eureka和zookeeper都可以提供服务注册与发现的功能，请说说两个的区别？")])]),t._v(" "),r("h2",{attrs:{id:"_2-回顾微服务和微服务架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-回顾微服务和微服务架构"}},[t._v("#")]),t._v(" 2. 回顾微服务和微服务架构")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://martinfowler.com/articles/microservices.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microservices"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/liuning8023/p/4493156.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("微服务（Microservices）——Martin Flower"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"_2-1-基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-基本概念"}},[t._v("#")]),t._v(" 2.1 基本概念")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("微服务，它提倡将单一的应用程序划分成一组小的服务。（模块化）")])]),t._v(" "),r("li",[r("p",[t._v("服务之间采用轻量级的通信机制相互沟通。（通常HTTP）")])]),t._v(" "),r("li",[r("p",[t._v("微服务化的核心就是将传统的一站式应用，根据业务拆分成一个一个的服务，彻底地去耦合，每一个微服务提供单个业务功能的服务，一个服务做一件事情，从技术角度看就是一种小而独立的处理过程，类似进程的概念，能够自行单独启动或销毁，拥有自己独立的数据库。")])])]),t._v(" "),r("h3",{attrs:{id:"_2-2-微服务与微服务架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-微服务与微服务架构"}},[t._v("#")]),t._v(" 2.2 微服务与微服务架构")]),t._v(" "),r("h4",{attrs:{id:"微服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#微服务"}},[t._v("#")]),t._v(" 微服务")]),t._v(" "),r("p",[t._v("强调的是服务的大小，它关注的是某一个点，是具体解决某一个问题/提供落地对应服务的一个应用，狭义的看，可以看做IDEA中的一个个微服务工程，或者Module")]),t._v(" "),r("div",{staticClass:"language-none line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("IDEA 工具里面使用Mven开发的一个个独立的小Module，它具体是使用springboot开发的一个小模块，专业的事情交给专业的模块来做，一个模块就做一件事情。\n强调的是一个个的个体，每个个体完成一个具体的任务或功能。\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br")])]),r("h4",{attrs:{id:"微服务架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#微服务架构"}},[t._v("#")]),t._v(" 微服务架构")]),t._v(" "),r("p",[t._v("一种新的架构形式，Martin Fowler，2014提出")]),t._v(" "),r("p",[t._v("微服务架构是一种架构模式，他提倡将单一应用程序划分成一组小的服务，服务之间互相协调，互相配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务于服务间采用轻量级的通信机制互相协作，每个服务都围绕着具体的业务进行构建，并且能够被独立的部署到生产环境中，另外，应尽量避免统一的，集中式的服务管理机制，对具体的一个服务而言，应根据业务上下文，选择合适的语言，工具对其进行构建。")]),t._v(" "),r("h3",{attrs:{id:"_2-3-微服务优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-微服务优缺点"}},[t._v("#")]),t._v(" 2.3 微服务优缺点")]),t._v(" "),r("p",[r("strong",[t._v("优点")])]),t._v(" "),r("ul",[r("li",[t._v("单一职责原则")]),t._v(" "),r("li",[t._v("每个服务足够内聚，足够小，代码容易理解，这样能聚焦一个指定的业务功能或业务需求")]),t._v(" "),r("li",[t._v("开发简单，开发效率提高，一个服务可能就是专一地只干一件事")]),t._v(" "),r("li",[t._v("微服务能够被小团队单独开发，这个小团队是2-5人的开发人员组成")]),t._v(" "),r("li",[t._v("微服务是松耦合的，是有功能意义的服务，无论是在开发阶段或部署阶段都是独立的")]),t._v(" "),r("li",[t._v("微服务能使用不同的语言开发")]),t._v(" "),r("li",[t._v("易于和第三方集成，微服务允许容易且灵活的方式集成自动部署，通过持续集成工具，如jenkins、Hudson、bamboo")]),t._v(" "),r("li",[t._v("微服务易于被一个开发人员理解，修改和维护，这样小团队能够更关注自己的工作成果。无需通过合作才能体现价值。")]),t._v(" "),r("li",[t._v("微服务允许你利用融合最新技术。")]),t._v(" "),r("li",[t._v("微服务只是业务逻辑的代码，不会和HTML、CSS或者其他界面混合")]),t._v(" "),r("li",[t._v("每个微服务都有自己的存储能力，可以有自己的数据库，也可以有统一的数据库")])]),t._v(" "),r("p",[r("strong",[t._v("缺点")])]),t._v(" "),r("ul",[r("li",[t._v("开发人员要处理分布式系统的复杂性")]),t._v(" "),r("li",[t._v("多服务运维难度，随着服务的增加，运维的压力也在增大")]),t._v(" "),r("li",[t._v("系统部署依赖")]),t._v(" "),r("li",[t._v("数据一致性")]),t._v(" "),r("li",[t._v("系统集成测试")]),t._v(" "),r("li",[t._v("性能监控")])]),t._v(" "),r("h3",{attrs:{id:"_2-4-微服务技术栈有哪些"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-微服务技术栈有哪些"}},[t._v("#")]),t._v(" 2.4 微服务技术栈有哪些")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("微服务条目")]),t._v(" "),r("th",[t._v("落地技术")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("服务开发")]),t._v(" "),r("td",[t._v("SpringBoot、Spring、SpringMVC")])]),t._v(" "),r("tr",[r("td",[t._v("服务配置与管理")]),t._v(" "),r("td",[t._v("Netflix公司的Archaius、阿里的Diamond等")])]),t._v(" "),r("tr",[r("td",[t._v("服务注册与发现")]),t._v(" "),r("td",[t._v("Eureka、Cosul、Zookeeper等")])]),t._v(" "),r("tr",[r("td",[t._v("服务调用")]),t._v(" "),r("td",[t._v("Rest、RPC、gRPC")])]),t._v(" "),r("tr",[r("td",[t._v("服务熔断器")]),t._v(" "),r("td",[t._v("Hystrix、Envoy等")])]),t._v(" "),r("tr",[r("td",[t._v("负载均衡")]),t._v(" "),r("td",[t._v("Ribbon、Nginx等")])]),t._v(" "),r("tr",[r("td",[t._v("服务接口调用（客户端调用服务的简化工具）")]),t._v(" "),r("td",[t._v("Feign等")])]),t._v(" "),r("tr",[r("td",[t._v("消息队列")]),t._v(" "),r("td",[t._v("Kafka、RabbitMQ、ActiveMQ等")])]),t._v(" "),r("tr",[r("td",[t._v("服务配置中心管理")]),t._v(" "),r("td",[t._v("SpringCloudConfig、Chef等")])]),t._v(" "),r("tr",[r("td",[t._v("服务路由（API网关）")]),t._v(" "),r("td",[t._v("Zuul等")])]),t._v(" "),r("tr",[r("td",[t._v("服务监控")]),t._v(" "),r("td",[t._v("Zabbix、Nagios、Metrics、Specatator等")])]),t._v(" "),r("tr",[r("td",[t._v("全链路追踪")]),t._v(" "),r("td",[t._v("Zipkin、Brave、Dapper等")])]),t._v(" "),r("tr",[r("td",[t._v("服务部署")]),t._v(" "),r("td",[t._v("Docker、OpenStack、Kubernetes等")])]),t._v(" "),r("tr",[r("td",[t._v("数据流操作开发包")]),t._v(" "),r("td",[t._v("SpringCloud Stream（封装与Redis、Rabbit、Kafka等发送接收消息）")])]),t._v(" "),r("tr",[r("td",[t._v("事件消息总线")]),t._v(" "),r("td",[t._v("SpringCloud Bus")])])])]),t._v(" "),r("h3",{attrs:{id:"_2-5-为什么选择springcloud作为微服务架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-为什么选择springcloud作为微服务架构"}},[t._v("#")]),t._v(" 2.5 为什么选择SpringCloud作为微服务架构")]),t._v(" "),r("h4",{attrs:{id:"_1-选型依据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-选型依据"}},[t._v("#")]),t._v(" 1. 选型依据")]),t._v(" "),r("ul",[r("li",[t._v("整体解决方案和框架成熟度")]),t._v(" "),r("li",[t._v("社区热度")]),t._v(" "),r("li",[t._v("可维护性")]),t._v(" "),r("li",[t._v("学习曲线")])]),t._v(" "),r("h4",{attrs:{id:"_2-当前各大it公司用的微服务架构有哪些"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-当前各大it公司用的微服务架构有哪些"}},[t._v("#")]),t._v(" 2. 当前各大IT公司用的微服务架构有哪些")]),t._v(" "),r("ul",[r("li",[t._v("阿里：dubbo+HFS")]),t._v(" "),r("li",[t._v("京东：JSF")]),t._v(" "),r("li",[t._v("新浪：Motan")]),t._v(" "),r("li",[t._v("当当网：Dubbox")])]),t._v(" "),r("h4",{attrs:{id:"_3-各微服务框架对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-各微服务框架对比"}},[t._v("#")]),t._v(" 3. 各微服务框架对比")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("功能点/服务框架")]),t._v(" "),r("th",[t._v("Netflix/SpringCloud")]),t._v(" "),r("th",[t._v("Motan")]),t._v(" "),r("th",[t._v("gRPC")]),t._v(" "),r("th",[t._v("Thrift")]),t._v(" "),r("th",[t._v("Dubbo/DubboX")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("功能定位")]),t._v(" "),r("td",[t._v("完整的微服务框架")]),t._v(" "),r("td",[t._v("RPC框架，但整合了ZK或Consul，实现集群环境的基本服务注册/发现")]),t._v(" "),r("td",[t._v("RPC框架")]),t._v(" "),r("td",[t._v("RPC框架")]),t._v(" "),r("td",[t._v("服务框架")])]),t._v(" "),r("tr",[r("td",[t._v("支持Rest")]),t._v(" "),r("td",[t._v("是，Ribbon支持多种可拔插的序列化选择")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")])]),t._v(" "),r("tr",[r("td",[t._v("支持RPC")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("是（Hession2）")]),t._v(" "),r("td",[t._v("是")]),t._v(" "),r("td",[t._v("是")]),t._v(" "),r("td",[t._v("是")])]),t._v(" "),r("tr",[r("td",[t._v("支持多语言")]),t._v(" "),r("td",[t._v("是（Rest形式）")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("是")]),t._v(" "),r("td",[t._v("是")]),t._v(" "),r("td",[t._v("否")])]),t._v(" "),r("tr",[r("td",[t._v("负载均衡")]),t._v(" "),r("td",[t._v("是（服务端zuul+客户端Ribbon），zuul-服务，动态路由，云端负载均衡Eureka（针对中间层服务器）")]),t._v(" "),r("td",[t._v("是（客户端）")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("是（客户端）")])]),t._v(" "),r("tr",[r("td",[t._v("配置服务")]),t._v(" "),r("td",[t._v("Netfix Archaius，Spring Cloud Config Server集中配置")]),t._v(" "),r("td",[t._v("是（zookeeper提供）")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")])]),t._v(" "),r("tr",[r("td",[t._v("服务调用链监控")]),t._v(" "),r("td",[t._v("是（zuul），zuul提供边缘服务，API网关")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")])]),t._v(" "),r("tr",[r("td",[t._v("高可用/容错")]),t._v(" "),r("td",[t._v("是（服务端Hystrix+客户端Ribbon）")]),t._v(" "),r("td",[t._v("是（客户端）")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("是（客户端）")])]),t._v(" "),r("tr",[r("td",[t._v("典型应用案例")]),t._v(" "),r("td",[t._v("Netflix")]),t._v(" "),r("td",[t._v("Sina")]),t._v(" "),r("td",[t._v("Google")]),t._v(" "),r("td",[t._v("Facebook")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("社区活跃程度")]),t._v(" "),r("td",[t._v("高")]),t._v(" "),r("td",[t._v("一般")]),t._v(" "),r("td",[t._v("高")]),t._v(" "),r("td",[t._v("一般")]),t._v(" "),r("td",[t._v("2017年后重新开始维护，之前中断了5年")])]),t._v(" "),r("tr",[r("td",[t._v("学习难度")]),t._v(" "),r("td",[t._v("中")]),t._v(" "),r("td",[t._v("低")]),t._v(" "),r("td",[t._v("高")]),t._v(" "),r("td",[t._v("高")]),t._v(" "),r("td",[t._v("低")])]),t._v(" "),r("tr",[r("td",[t._v("文档丰富程度")]),t._v(" "),r("td",[t._v("高")]),t._v(" "),r("td",[t._v("一般")]),t._v(" "),r("td",[t._v("一般")]),t._v(" "),r("td",[t._v("一般")]),t._v(" "),r("td",[t._v("高")])]),t._v(" "),r("tr",[r("td",[t._v("其他")]),t._v(" "),r("td",[t._v("Spring Cloud Bus为我们的应用程序带来了更多管理端点")]),t._v(" "),r("td",[t._v("支持降级")]),t._v(" "),r("td",[t._v("Netflix内部在开发集成gRPC")]),t._v(" "),r("td",[t._v("IDL定义")]),t._v(" "),r("td",[t._v("实践的公司比较多")])])])]),t._v(" "),r("h2",{attrs:{id:"_3-什么是springcloud"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是springcloud"}},[t._v("#")]),t._v(" 3. 什么是SpringCloud")]),t._v(" "),r("h3",{attrs:{id:"_3-1-基本介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基本介绍"}},[t._v("#")]),t._v(" 3.1 基本介绍")]),t._v(" "),r("p",[t._v("​\tSpringcloud基于Spring Boot提供了一套微服务解决方案，包括服务注册与发现，配置中心，全链路监控，服务网关，负载均衡，熔断器等组件，除了基于NetFlix的开源组件做髙度抽象封装之外，还有一些选型中立的开源组件。")]),t._v(" "),r("p",[t._v("​\tSpringCloud利用Springboot的开发便利性，巧妙地简化了分布式系统基础设施的开发，SpringCloud为开发人员提供了快速构建分布式系统的一些工具，包括"),r("strong",[t._v("配置管理、服务发现、断路器、路由、微代理、事件总线、全局锁、决策竞选、分布式会话等等")]),t._v("，他们都可以用SpringBoot的开发风格做到一键启动和部署。")]),t._v(" "),r("p",[t._v("​\tSpringboot并没有重复造轮子，它只是将目前各家公司开发的比較成熟、经得起实际考研的服务框架组合起来，通过 SpringBoot风格进行再封装，屏蔽掉了复杂的配置和实现原理，"),r("strong",[t._v("最终给开发者留出了一套简单易懂、易部署和易维护的分布式系统开发工具包")])]),t._v(" "),r("p",[t._v("​\tSprinfCloud是分布式微服务架构下的一站式解决方案，是各个微服务架构落地技术的集合体，俗称微服务全交通。")]),t._v(" "),r("h3",{attrs:{id:"_3-2-springcloud和springboot关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-springcloud和springboot关系"}},[t._v("#")]),t._v(" 3.2 SpringCloud和SpringBoot关系")]),t._v(" "),r("ul",[r("li",[t._v("SpringBoot专注于快速方便的开发单个个体微服务。-jar包")]),t._v(" "),r("li",[t._v("SpringCloud是专注全局的微服务协调整理治理框架，它将SpringBoot开发的一个个单体微服务整合并管理起来，为各个微服务之间提供：配置管理、服务发现、断路器、路由、微代理、事件总线、全局锁、决策竞选，分布式会话等等集成服务。")]),t._v(" "),r("li",[t._v("SpringBoot可以离开SpringCloud独立使用，开发项目，但是SpringCloud离不开SpringBoot，属于依赖关系。")]),t._v(" "),r("li",[t._v("SpringBoot专注于快速、方便地开发单个个体微服务，SpringCloud关注全局的服务治理框架")])]),t._v(" "),r("h3",{attrs:{id:"_3-3-dubbo和springcloud技术选型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-dubbo和springcloud技术选型"}},[t._v("#")]),t._v(" 3.3 Dubbo和SpringCloud技术选型")]),t._v(" "),r("h4",{attrs:{id:"_1-分布式-服务治理dubbo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-分布式-服务治理dubbo"}},[t._v("#")]),t._v(" 1. 分布式+服务治理Dubbo")]),t._v(" "),r("p",[t._v("​\t目前成熟的互联网架构：应用服务拆分+消息中间件")]),t._v(" "),r("p",[t._v("​\t客户端-> CDN-> Lvs集群 -> Nginx集群 -> 服务器Tomcat集群、分布式文件系统(HDFS、fastDFS)->注册中心<-服务提供者->MQ消息中间件(队列、异步)->缓存（Redis集群）、Elasticsearch搜索引擎（通常与缓存相关）->数据库集群、数据库中间件(MyCat等，解决数据库同步问题，通常读水平拆分、写垂直拆分，因为写操作比较IO耗时)。")]),t._v(" "),r("h4",{attrs:{id:"_2-dubbo和springcloud对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-dubbo和springcloud对比"}},[t._v("#")]),t._v(" 2. Dubbo和SpringCloud对比")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th"),t._v(" "),r("th",[t._v("Dubbo")]),t._v(" "),r("th",[t._v("SpringCloud")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("服务注册中心")]),t._v(" "),r("td",[t._v("ZooKeeper")]),t._v(" "),r("td",[t._v("SpringCloud Netflix Eureka")])]),t._v(" "),r("tr",[r("td",[t._v("服务调用方式")]),t._v(" "),r("td",[t._v("RPC")]),t._v(" "),r("td",[t._v("REST API")])]),t._v(" "),r("tr",[r("td",[t._v("服务监控")]),t._v(" "),r("td",[t._v("Dubbo-monitor")]),t._v(" "),r("td",[t._v("SpringBoot Admin")])]),t._v(" "),r("tr",[r("td",[t._v("断路器")]),t._v(" "),r("td",[t._v("不完善")]),t._v(" "),r("td",[t._v("SpringCloud Netflix Hystrix")])]),t._v(" "),r("tr",[r("td",[t._v("服务网关")]),t._v(" "),r("td",[t._v("无")]),t._v(" "),r("td",[t._v("SpringCloud Netflix Zuul")])]),t._v(" "),r("tr",[r("td",[t._v("分布式配置")]),t._v(" "),r("td",[t._v("无")]),t._v(" "),r("td",[t._v("SpringCloud Config")])]),t._v(" "),r("tr",[r("td",[t._v("服务跟踪")]),t._v(" "),r("td",[t._v("无")]),t._v(" "),r("td",[t._v("SpringCloud Sleuth")])]),t._v(" "),r("tr",[r("td",[t._v("消息总栈")]),t._v(" "),r("td",[t._v("无")]),t._v(" "),r("td",[t._v("SpringCloud Bus")])]),t._v(" "),r("tr",[r("td",[t._v("数据流")]),t._v(" "),r("td",[t._v("无")]),t._v(" "),r("td",[t._v("SpringCloud Stream")])]),t._v(" "),r("tr",[r("td",[t._v("批量任务")]),t._v(" "),r("td",[t._v("无")]),t._v(" "),r("td",[t._v("SpringCloud Task")])])])]),t._v(" "),r("p",[r("strong",[t._v("最大区别:SpringCloud抛弃了Dubbo的RPC通信,采用的是基于HTTP的REST方式。")])]),t._v(" "),r("p",[t._v("严格来说,这两种方式各有优劣。虽然从一定程度上来说,后者牺牲了服务调用的性能,但也避免了上面提到的原生RPC带来的问题。而且REST相比RPC更为灵活,服务提供方和调用方的依赖只依靠一纸契约,不存在代码级别的强依赖,这在强调快速演化的微服务环境下,显得更加合适。")]),t._v(" "),r("p",[r("strong",[t._v("品牌机与组装机的区别")])]),t._v(" "),r("p",[t._v("很明显, Spring Cloud的功能比 Dubbo更加强大,涵盖面更广,而且作为Spring的拳头项目,它也能够与 Spring Framework、 Spring Boot、 Spring Data、 Spring Batch等其他 Spring项目完美融合,这些对于微服务而言是至关重要的。使用Dubbo构建的微服务架构就像组裝电脑,各环节我们的选择自由度很高,但是最终结果很有可能因为一条内存质量不行就点不亮了,总是让人不怎么放心,但是如果你是一名高手,那这些都不是问题;而SprintCoud就像品牌机,在Spring Source的整合下,做了大量的兼容性测试,保证了机器拥有更高的稳定性,但是如果要在使用非原装组件外的东西,就需要对其基础有足够的了解。")]),t._v(" "),r("p",[r("strong",[t._v("社区支持与更新力度")])]),t._v(" "),r("p",[t._v("最为重要的是, Dubbo停止了5年左右的更新,虽然2017.7重启了。对于技术发展的新需求,需要由开发者自行拓展升级(比如当当网弄出了 DubboX),这对于很多想要采用微服务架构的中小软件组织,显然是不太合适的,中小公司没有这么强大的技术能力去修改 Dubbo源码+周边的一整套解決方案,并不是每一个公司都有阿里的大牛+真实的线上生产环境测试过")]),t._v(" "),r("p",[r("strong",[t._v("解决的问题域不一样：Dubbo的定位是一款RPC框架，Spring Cloud的目标是微服务架构下的一站式解决方案")])]),t._v(" "),r("p",[r("strong",[t._v("设计模式+微服务拆分思想：软实力，活跃度")])]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/7a063123d1f1",target:"_blank",rel:"noopener noreferrer"}},[t._v("LVS 简介及使用"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/firstdream/p/6728106.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据库垂直拆分 水平拆分"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://my.oschina.net/jamesview/blog/2994112",target:"_blank",rel:"noopener noreferrer"}},[t._v("干货满满！10分钟看懂Docker和K8S"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"_3-4-springcloud能干啥"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-springcloud能干啥"}},[t._v("#")]),t._v(" 3.4 SpringCloud能干啥")]),t._v(" "),r("ul",[r("li",[t._v("Distributed/versioned configuration(分布式/版本控制配置)")]),t._v(" "),r("li",[t._v("Service registration and discovery(服务注册与发现)")]),t._v(" "),r("li",[t._v("Routing(路由)")]),t._v(" "),r("li",[t._v("Service-to- service calls(服务到服务的调用)")]),t._v(" "),r("li",[t._v("Load balancing(负载均衡配置)")]),t._v(" "),r("li",[t._v("Circuit Breakers(断路器)")]),t._v(" "),r("li",[t._v("Distributed messaging(分布式消息管理)")]),t._v(" "),r("li",[t._v("......")])]),t._v(" "),r("h3",{attrs:{id:"_3-5-springcloud下载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-springcloud下载"}},[t._v("#")]),t._v(" 3.5 SpringCloud下载")]),t._v(" "),r("div",{staticClass:"language-none line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("Spring Cloud是一个由众多独立子项目组成的大型综合项目，每个子项目有不同的发行节奏，都维护着自己的发布版本号。Spring Cloud通过一个资源清单 BOM(Bill of Materials)来管理每个版本的子项目清单。为了避免与子项目的发布号混淆，所以没有采用版本号的方式，而是通过命名的方式。\n\n这些版本名称的命名方式采用了伦敦地铁站的名称，同时根据字母表的顺序来对应版本实践顺序，比如：最早的Release版本：Angel，第二个Release版本：Brixton，然后是Camden、Dalston、Edgware...\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br")])]),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.springcloud.cc/spring-cloud-netflix.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Netflix 中文文档 参考手册 中文版"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.springcloud.cc/spring-cloud-dalston.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Dalston 中文文档"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"http://www.springcloud.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud 中国社区"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.springcloud.cc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud 中文网"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_4-rest学习环境搭建-服务提供者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-rest学习环境搭建-服务提供者"}},[t._v("#")]),t._v(" 4. Rest学习环境搭建：服务提供者")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/39055107",target:"_blank",rel:"noopener noreferrer"}},[t._v("jetty和tomcat的区别和联系是什么？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/weixin_41758407/article/details/90722718",target:"_blank",rel:"noopener noreferrer"}},[t._v("map-underscore-to-camel-case"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/haobindayi/article/details/81776853",target:"_blank",rel:"noopener noreferrer"}},[t._v("MyBatis二级缓存应用场景以及局限性"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/maoyizhimi/p/7778504.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MYSQL缓存：一级缓存和二级缓存"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_26525215/article/details/79182637",target:"_blank",rel:"noopener noreferrer"}},[t._v("【MyBatis】MyBatis一级缓存和二级缓存"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_5-rest学习环境搭建-服务消费者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-rest学习环境搭建-服务消费者"}},[t._v("#")]),t._v(" 5.Rest学习环境搭建：服务消费者")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://blog.csdn.net/weixin_38004638/article/details/99655322",target:"_blank",rel:"noopener noreferrer"}},[t._v("@RequestBody和@RequestParam区别"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/originations/article/details/89492884",target:"_blank",rel:"noopener noreferrer"}},[t._v("@ResponseBody详解"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/u014662858/article/details/84262544",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Reference 、@Resource和@Autowired"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/363207841/answer/962651986",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么一般是给post请求设置content-type,get请求不需要设置吗？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/cxuanBlog/p/11179439.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Bean 注解全解析"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/721c76c1529c",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring @Configuration 注解介绍"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_6-eureka-什么是eureka"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-eureka-什么是eureka"}},[t._v("#")]),t._v(" 6. Eureka: 什么是Eureka")]),t._v(" "),r("p",[r("strong",[t._v("Eureka服务注册与发现")])]),t._v(" "),r("h3",{attrs:{id:"_6-1-什么是eureka"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-什么是eureka"}},[t._v("#")]),t._v(" 6.1 什么是Eureka")]),t._v(" "),r("ul",[r("li",[t._v("Euerka：怎么读？")]),t._v(" "),r("li",[t._v("Netflix在设计Eureka时，遵循的就是AP原则")]),t._v(" "),r("li",[t._v("Eureka是Netflix的一个子模块，也是核心模块之一。Eureka是一个基于REST的服务，用于定位服务，以实现云端中间层服务发现和故障转移，服务注册与发现对于微服务来说是非常重要的，有了服务发现与注册，只需要使用服务的标识符，就可以访问到服务器，而不需修改服务调用的配置文件了，功能类似Dubbo的注册中心，比如ZooKeeper；")])]),t._v(" "),r("h3",{attrs:{id:"_6-2-原理讲解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-原理讲解"}},[t._v("#")]),t._v(" 6.2 原理讲解")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("Eureka的基本架构")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("Springcloud封装了Netflix公司开发的Eureka模块来实现服务注册和发现(对比 Zookeeper)")])]),t._v(" "),r("li",[r("p",[t._v("Eureka采用了C-S的架构设计, EurekaServer作为服务注册功能的服务器,他是服务注册中心")])]),t._v(" "),r("li",[r("p",[t._v("而系统中的其他微服务。使用 Eureka的客户端连接到 EurekaServer并维持心跳连接。这样系统的维护人员就可以通过EurekaServer来监控系统中各个微服务是否正常运行, SpringCloud的一些其他模块(比如Zuul)就可以通过EurekaServer来发现系统中的其他微服务,并执行相关的逻辑")])]),t._v(" "),r("li",[r("p",[t._v("和 Dubbo架构对比")])]),t._v(" "),r("li",[r("p",[t._v("Eureka包含两个组件："),r("strong",[t._v("Eureka Server")]),t._v("和"),r("strong",[t._v("Eureka Client")])])]),t._v(" "),r("li",[r("p",[t._v("Eureka Server提供服务注册服务,各个节点启动后,会在 Eureka Server中进行注册,这样Eureka Server中的服务注册表中将会存储所有可用服务节点的信息,服务节点的信息可以在界面中直观的看到。")])]),t._v(" "),r("li",[r("p",[t._v("Eureka Client是一个java客户端,用于简化 Eureka Server的交互,客户端同时也具备一个内置的,"),r("u",[t._v("使用轮询负载算法的负载均衡器")]),t._v("。在应用启动后,将会向 Eureka Server发送心跳(默认周期为30秒)。如果Eureka Server在多个心跳周期内没有接收到某个节点的心跳, Eureka Server将会从服务注册表中把这个服务节点移除掉(默认周期为90秒)")])])])]),t._v(" "),r("li",[r("p",[t._v("三大角色")]),t._v(" "),r("ul",[r("li",[t._v("Eureka Server:提供服务的注册与发现。")]),t._v(" "),r("li",[t._v("Service Provider:将自身服务注册到 Eureka中,从而使消费方能够找到。")]),t._v(" "),r("li",[t._v("Service Consumer:服务消费方从 Eureka中获取注册服务列表,从而找到消费服务。")])])])]),t._v(" "),r("p",[r("strong",[t._v("微服务开发套路步骤：")])]),t._v(" "),r("ol",[r("li",[r("strong",[t._v("导入依赖")])]),t._v(" "),r("li",[r("strong",[t._v("编写配置文件")])]),t._v(" "),r("li",[r("strong",[t._v("开启这个功能 @EnableXXXX")])]),t._v(" "),r("li",[r("strong",[t._v("配置类")])])]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/e2e3ded1f54a",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eureka"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/acmman/article/details/99670419",target:"_blank",rel:"noopener noreferrer"}},[t._v("【Spring Cloud总结】14.Eureka常用配置详解"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/april-chen/p/10617066.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Eureka 配置"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/breath-taking/articles/7940364.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY'RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE."),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_7-eureka-服务注册-信息配置-自我保护机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-eureka-服务注册-信息配置-自我保护机制"}},[t._v("#")]),t._v(" 7. Eureka: 服务注册-信息配置-自我保护机制")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://blog.csdn.net/QFYJ_TL/article/details/84066451",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud学习过程中遇到的Bug Error creating bean with name 'scopedTarget.eurekaClient' defined in class"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_27680317/article/details/79181236",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud下配置eureka.instance.instance-id使得服务实例在eureka界面增加显示版本号"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/xishuai/p/spring-cloud-eureka-safe.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Eureka 自我保护机制"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/jerry_player/article/details/85952023",target:"_blank",rel:"noopener noreferrer"}},[t._v("spring Cloud Eureka增加security后注册失败解决方案"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/ericnie/p/9393995.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eureka的自我保护机制"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("自我保护机制：好死不如赖活着")])]),t._v(" "),r("p",[t._v("一句话总结:某时刻某一个微服务不可以用了, eureka不会立刻清理,依旧会对该微服务的信息进行保存!")]),t._v(" "),r("ul",[r("li",[t._v("默认情况下,如果Eureka Server在一定时间内没有接收到某个微服务实例的心跳, Eureka Server将会注销该实例(默认90秒)。但是当网络分区故障发生时,微服务与Eureka之间无法正常通行,以上行为可能变得非常危险了-因为微服务本身其实是健康的,"),r("strong",[t._v("此时本不应该注销这个服务")]),t._v("。 Eureka通过自我保护机制来解决这个问题-当 Eureka Server节点在短时间内丢失过多客户端时(可能发生了网络分区故障),那么这个节点就会进入自我保护模式。一旦进入该模式, Eureka Server就会保护服务注册表中的信息,不再删除服务注册表中的数据(也就是不会注销仼何微服务)。当网络故障恢复后,该Eureka Server节点会自动退岀自我保护模式")]),t._v(" "),r("li",[t._v("在自我保护模式中, Eureka Server会保护服务注册表中的信息,不再注销仼何服务实例。当它收到的心跳数重新恢复到阈值以上时,该 Eureka Server节点就会自动退出自我保护模式。它的设计哲学就是宁可保留错误的服务注册信息,也不盲目注销任何可能健康的服务实例。一句话:好死不如赖活着")]),t._v(" "),r("li",[t._v("综上,自我保护模式是一种应对网络异常的安全保护措施。它的架构哲学是宁可同时保留所有微服务(健康的微服务和不健康的微服务都会保留),也不盲目注销任何健康的微服务。使用自我保护模式,可以让 Eureka集群更加的健壮和稳定")]),t._v(" "),r("li",[t._v("在 SpringCloud中,可以使用"),r("code",[t._v("eureka. server, enable-self- preservation= false")]),t._v("禁用自我保护模式【不推荐关闭自我保护机制】")])]),t._v(" "),r("h2",{attrs:{id:"_8-eureka-集群环境配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-eureka-集群环境配置"}},[t._v("#")]),t._v(" 8. Eureka：集群环境配置")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"http://blog.itpub.net/31558358/viewspace-2375380/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud：使用Eureka集群搭建高可用服务注册中心"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.ibm.com/mysupport/s/question/0D50z00005pgfSQCAY/relay-start-error-javalangsecurityexception-cannot-locate-policy-or-framework-files?language=zh_CN&sort=newest",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[t._v("relay start error: java.lang.SecurityException: Cannot locate policy or framework files!")]),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_25112523/article/details/83028529",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eureka控制台相关介绍及自我保护机制解说"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_9-cap原则及对比zookeeper"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-cap原则及对比zookeeper"}},[t._v("#")]),t._v(" 9. CAP原则及对比ZooKeeper")]),t._v(" "),r("h3",{attrs:{id:"回顾cap原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回顾cap原则"}},[t._v("#")]),t._v(" 回顾CAP原则")]),t._v(" "),r("p",[t._v("RDBMS （Mysql、Oracle、SqlServer）===>ACID")]),t._v(" "),r("p",[t._v("NoSQL（Redis、mongdb）===>CAP")]),t._v(" "),r("h3",{attrs:{id:"acid是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#acid是什么"}},[t._v("#")]),t._v(" ACID是什么？")]),t._v(" "),r("ul",[r("li",[t._v("A（Atomicity）原子性")]),t._v(" "),r("li",[t._v("C（Consistency）一致性")]),t._v(" "),r("li",[t._v("I（Isolation）隔离性")]),t._v(" "),r("li",[t._v("D（Durability）持久性")])]),t._v(" "),r("h3",{attrs:{id:"cap是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cap是什么"}},[t._v("#")]),t._v(" CAP是什么？")]),t._v(" "),r("ul",[r("li",[t._v("C（Consistency）强一致性")]),t._v(" "),r("li",[t._v("A（Availability）可用性")]),t._v(" "),r("li",[t._v("P（Partition tolerance）分区容错性")])]),t._v(" "),r("p",[t._v("CAP的三进二：CA、AP、CP")]),t._v(" "),r("p",[r("strong",[t._v("CAP理论的核心")])]),t._v(" "),r("ul",[r("li",[t._v("一个分布式系统不可能同时很好的满足一致性,可用性和分区容错性这三个需求")]),t._v(" "),r("li",[t._v("根据CAP原理，将NoSQL数据库分成了满足CA原则，满足CP原则和满足AP原则三个大类：\n"),r("ul",[r("li",[t._v("CA：单点集群，满足一致性，可用性的系统，通常可扩展性较差")]),t._v(" "),r("li",[t._v("CP：满足一致性，分区容错性的系统，通常性能不是特别高")]),t._v(" "),r("li",[t._v("AP：满足可用性，分区容错性的系统，通常可能对一致性要求低一点")])])])]),t._v(" "),r("h3",{attrs:{id:"作为服务注册中心-eureka比zookeeper好在哪里"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#作为服务注册中心-eureka比zookeeper好在哪里"}},[t._v("#")]),t._v(" 作为服务注册中心，Eureka比ZooKeeper好在哪里？")]),t._v(" "),r("p",[t._v("​\t著名的CAP理论指出，一个分布式系统不可能同时满足C（一致性）、A（可用性）、P（容错性）。")]),t._v(" "),r("p",[t._v("​\t由于分区容错性P在分布式系统中是必须要保证的，因此我们只能在A和C之间进行权衡。")]),t._v(" "),r("ul",[r("li",[t._v("ZooKeeper保证的是CP；")]),t._v(" "),r("li",[t._v("Eureka保证的是AP；")])]),t._v(" "),r("h3",{attrs:{id:"zookeeper保证的是cp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper保证的是cp"}},[t._v("#")]),t._v(" ZooKeeper保证的是CP")]),t._v(" "),r("p",[t._v("​\t当向注册中心查询服务列表时,我们可以容忍注册中心返回的是几分钟以前的注册信息,但不能接受服务直接down掉不可用。也就是说,服务注册功能对可用性的要求要高于一致性。但是zk会出现这样一种情况,当 master节点因为网络故障与其他节点失去联系时,剩余节点会重新进行leader选举。问题在于,选举 leader的时间太长,30-120s,且选举期间整个zk集群都是不可用的,这就导致在选举期间注册服务瘫痪。在云部署的环境下,因为网络问题使得zk集群失去master节点是较大概率会发生的事件,虽然服务最终能够恢复,但是漫长的选举时间导致的注册长期不可用是不能容忍的。")]),t._v(" "),r("h3",{attrs:{id:"eureka保证的是ap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eureka保证的是ap"}},[t._v("#")]),t._v(" Eureka保证的是AP")]),t._v(" "),r("p",[t._v("​\tEureka看明白了这一点,因此在设计时就优先保证可用性。"),r("strong",[t._v("Eureka各个节点都是平等的")]),t._v(",几个节点挂掉不会影响正常节点的工作,剩余的节点依然可以提供注册和查询服务。而 Eureka的客户端在向某个 Eureka注册时,如果发现连接失败,则会自动切換至其他节点,只要有一台 Eureka还在,就能保住注册服务的可用性,只不过查到的信息可能不是最新的,除此之外, Eureka还有一种自我保护机制,如果在15分钟内超过85%的节点都没有正常的心跳,那么 Eureka就认为客户端与注册中心出现了网络故障,此时会出现以下几种情况:")]),t._v(" "),r("ol",[r("li",[t._v("Eureka不再从注册列表中移除因为长时间没收到心跳而应该过期的服务")]),t._v(" "),r("li",[t._v("Eureka仍然能够接收新服务的注册和查询请求，但是不会被同步到其他节点上（即保证当前节点仍然可用）")]),t._v(" "),r("li",[t._v("当网络稳定时，当前实例新的注册信息会被同步到其他节点中")])]),t._v(" "),r("p",[t._v("​\t"),r("strong",[t._v("因此，Eureka可以很好地应对因网络故障导致部分节点失去联系的情况，而不会像zookeeper那样使整个注册服务瘫痪")]),t._v("。")]),t._v(" "),r("h2",{attrs:{id:"_10-ribbon-负载均衡及ribbon"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-ribbon-负载均衡及ribbon"}},[t._v("#")]),t._v(" 10. Ribbon：负载均衡及Ribbon")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/e136ec79235c",target:"_blank",rel:"noopener noreferrer"}},[t._v("30张图带你彻底理解红黑树"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"http://www.manongjc.com/article/59734.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud之Ribbon转发请求头(header参数)"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/itguangit/article/details/78825505",target:"_blank",rel:"noopener noreferrer"}},[t._v("详解 RestTemplate 操作"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/2e87d96023c8",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud - Ribbon 使用以及自动请求头签名信息"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/27a82c494413",target:"_blank",rel:"noopener noreferrer"}},[t._v("Springboot -- 用更优雅的方式发HTTP请求(RestTemplate详解)"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/hellxz/p/8875452.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringCloud（五） 使用Ribbon进行Restful请求"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/1bd66db5dc46",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ribbon详解"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("出错or异常")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/8be6efeb17b1",target:"_blank",rel:"noopener noreferrer"}},[t._v("RestTemplate踩坑笔记-中文乱码与json被解析成xml"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"ribbon是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ribbon是什么"}},[t._v("#")]),t._v(" Ribbon是什么？")]),t._v(" "),r("ul",[r("li",[t._v("Spring Cloud Ribbon是基于Netflix Ribbon实现的一套"),r("strong",[t._v("客户端负载均衡的工具")]),t._v("。")]),t._v(" "),r("li",[t._v("简单的说, Ribbon是Netflix发布的开源项目,主要功能是提供客户端的软件负载均衡算法,将NetFlix的中间层服务连接在一起。Ribbon的客户端组件提供一系列完整的配置项如:连接超时、重试等等。简单的说,就是在配置文件中列岀 LoadBalancer(简称LB:负载均衡)后面所有的机器, Ribbon会自动的帮助你基于某种规则(如简单轮询,随机连接等等)去连接这些机器。我们也很容易使用 Ribbon实现自定义的负载均衡算法。")])]),t._v(" "),r("h3",{attrs:{id:"ribbon能干嘛"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ribbon能干嘛"}},[t._v("#")]),t._v(" Ribbon能干嘛?")]),t._v(" "),r("ul",[r("li",[t._v("LB，即负载均衡( Load Balance)，在微服务或分布式集群中经常用的一种应用。")]),t._v(" "),r("li",[r("strong",[t._v("负載均衡简单的说就是将用户的请求平摊地分配到多个服务上,从而达到系统的HA(高可用)")]),t._v("。")]),t._v(" "),r("li",[t._v("常见的负载均衡软件有 Nginx,"),r("code",[t._v("LVs")]),t._v("等等")]),t._v(" "),r("li",[t._v("dubbo、SpringCloud中均给我们提供了负载均衡, "),r("strong",[t._v("SpringCloud的负载均衡算法可以自定义")])]),t._v(" "),r("li",[t._v("负载均衡简单分类:\n"),r("ul",[r("li",[t._v("集中式LB\n"),r("ul",[r("li",[t._v("即在服务的消费方和提供方之间使用独立的LB设施,如Nginx:反向代理服务器,由该设施负责把访问请求通过某种策略转发至服务的提供方!")])])]),t._v(" "),r("li",[t._v("进程式LB\n"),r("ul",[r("li",[t._v("将LB逻辑集成到消费方，消费方从服务注册中心获知有哪些地址可用，然后自己再从这些地址中选出一个合适的服务器。")]),t._v(" "),r("li",[r("strong",[t._v("Ribbon就属于进程内LB")]),t._v(",它只是一个类库,集成于消费方进程,消费方通过它来获取到服务提供方的地址!")])])])])])]),t._v(" "),r("h2",{attrs:{id:"_11-ribbon-使用ribbon实现负载均衡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-ribbon-使用ribbon实现负载均衡"}},[t._v("#")]),t._v(" 11. Ribbon：使用Ribbon实现负载均衡")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/sunchunmei/p/11426758.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("关联mysql失败_Server returns invalid timezone. Go to 'Advanced' tab and set 'serverTimezon'"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("SpringCloud中使用Ribbon时，Ribbon的默认算法即轮询算法")]),t._v(" "),r("h2",{attrs:{id:"_12-ribbon-自定义负载均衡算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-ribbon-自定义负载均衡算法"}},[t._v("#")]),t._v(" 12. Ribbon：自定义负载均衡算法")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://blog.csdn.net/xzp_12345/article/details/81129735",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thread类中的方法：join()、sleep()、yield()之间的区别"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/yufeng218/p/10952590.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ribbon核心组件IRule及配置指定的负载均衡算法"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/ad6a7e497ac0",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringCloud Ribbon介绍及总结"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/weixin_43089453/article/details/87937994",target:"_blank",rel:"noopener noreferrer"}},[t._v("F5负载均衡综合实例详解"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/panxueji/article/details/42647193",target:"_blank",rel:"noopener noreferrer"}},[t._v("F5负载均衡原理"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/Ashiamd/article/details/104096878",target:"_blank",rel:"noopener noreferrer"}},[t._v("java.lang.IllegalStateException: No instances available for SPRINGCLOUDTEST-PROVIDER-DEPT解决"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_13-feign-使用接口方式调用服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-feign-使用接口方式调用服务"}},[t._v("#")]),t._v(" 13. Feign：使用接口方式调用服务")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/e1f23a998b82",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud 学习教程——第三篇：服务消费者（Ribbon / Feign）"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"_13-1-feign负载均衡-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-feign负载均衡-简介"}},[t._v("#")]),t._v(" 13.1 Feign负载均衡-简介")]),t._v(" "),r("p",[t._v("​\tfeign是声明式的 web service客户端,它让微服务之间的调用变得更简单了,类似 controller调用 service。SpringCloud集成了Ribbon和Eureka,可在使用Feign时提供负载均衡的http客户端。")]),t._v(" "),r("p",[t._v("​\t只需要创建一个接口,然后添加注解即可")]),t._v(" "),r("p",[t._v("​\tfeign，主要是社区，大家都习惯面向接口编程。这个是很多开发人员的规范。调用微服务访问两种方法")]),t._v(" "),r("ol",[r("li",[t._v("微服务名字【Ribbon】")]),t._v(" "),r("li",[t._v("接口和注解【feign】")])]),t._v(" "),r("h3",{attrs:{id:"feign能干什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#feign能干什么"}},[t._v("#")]),t._v(" Feign能干什么？")]),t._v(" "),r("ul",[r("li",[t._v("Feign旨在使编写Java Http客户端变得更容易")]),t._v(" "),r("li",[t._v("前面在使用 Ribbon+RestTemplatel时,利用RestTemplate对Http请求的封装处理,形成了一套模板化的调用方法。但是在实际开发中,由于对服务依赖的调用可能不止一处,往往一个接口会被多处调用,所以通常都会针对每个微服务自行封装一些客户端类来包装这些依赖服务的调用。所以, Feign在此基础上做了进一步封装,由他来帮助我们定义和实现依赖服务接口的定义,**在 Feign的实现下,我们只需要创建一个接口并使用注解的方式来配置它(类似于以前Dao接口上标注Mapper注解,现在是一个微服务接口上面标注一个 Feign注解即可。)**即可完成对服务提供方的接口绑定,简化了使用Spring Cloud Ribbon时,自动封装服务调用客户端的开发量。")])]),t._v(" "),r("h3",{attrs:{id:"feign继承了ribbon"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#feign继承了ribbon"}},[t._v("#")]),t._v(" Feign继承了Ribbon")]),t._v(" "),r("ul",[r("li",[t._v("利用Ribbon维护了MicroServiceCloud-Dept的服务列表信息,并且通过轮询实现了客户端的负载均衡,而与Ribbon不同的是,通过 Feign只需要定义服务绑定接口且以声明式的方法,优雅而且简单的实现了服务调用。")])]),t._v(" "),r("h2",{attrs:{id:"_14-hystrix-服务熔断"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-hystrix-服务熔断"}},[t._v("#")]),t._v(" 14. Hystrix：服务熔断")]),t._v(" "),r("h3",{attrs:{id:"分布式系统面临的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统面临的问题"}},[t._v("#")]),t._v(" 分布式系统面临的问题")]),t._v(" "),r("p",[t._v("复杂分布式体系结构中的应用程序有数十个依赖关系，每个依赖关系在某些时候将不可避免的失败")]),t._v(" "),r("h3",{attrs:{id:"服务雪崩"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务雪崩"}},[t._v("#")]),t._v(" 服务雪崩")]),t._v(" "),r("p",[t._v("​\t多个微服务之间调用的时候,假设微服务A调用微服务B和微服务C,微服务B和微服务C又调用其他的微服务，这就是所谓的“扇出”、如果扇出的链路上某个微服务的调用响应时间过长或者不可用,对微服务A的调用就会占用越来越多的系统资源,进而引起系统崩溃,所谓的“雪崩效应”。")]),t._v(" "),r("p",[t._v("​\t对于高流量的应用来说,单一的后端依赖可能会导致所有服务器上的所有资源都在几秒中内饱和。比失败更糟糕的是,这些应用程序还可能导致服务之间的延迟增加,备份队列,线程和其他系统资源紧张,导致整个系统发生更多的级联故障,这些都表示需要对故障和延迟进行隔离和管理,以便单个依赖关系的失败,不能取消整个应用程序或系统。")]),t._v(" "),r("p",[t._v('​\t我们需要"弃车保帅"')]),t._v(" "),r("h3",{attrs:{id:"什么是hystrix"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是hystrix"}},[t._v("#")]),t._v(" 什么是Hystrix")]),t._v(" "),r("p",[t._v("​\tHystrix是一个用于处理分布式系统的延迟和容错的开源库,在分布式系统里,许多依赖不可避免的会调用失败,比如超时,异常等, Hystrix能够保证在一个依赖出问题的情况下,不会导致整体服务失败,避免级联故障，以提高分布式系统的弹性。")]),t._v(" "),r("p",[t._v('​\t"断路器"本身是一种开关装置,当某个服务单元发生故障之后,通过断路器的故障监控(类似熔断保险丝),'),r("strong",[t._v("向调用方返回一个服务预期的,可处理的备选响应(FallBack),而不是长时间的等待或者抛出调用方法无法处理的异常,这样就可以保证了服务调用方的线程不会被长时间")]),t._v(",不必要的占用,从而避免了故障在分布式系统中的蔓延,乃至雪崩")]),t._v(" "),r("h3",{attrs:{id:"能干嘛"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#能干嘛"}},[t._v("#")]),t._v(" 能干嘛")]),t._v(" "),r("ul",[r("li",[t._v("服务降级")]),t._v(" "),r("li",[t._v("服务熔断")]),t._v(" "),r("li",[t._v("服务限流")]),t._v(" "),r("li",[t._v("接近实时的监控")]),t._v(" "),r("li",[t._v("...")])]),t._v(" "),r("h3",{attrs:{id:"服务熔断"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务熔断"}},[t._v("#")]),t._v(" 服务熔断")]),t._v(" "),r("h4",{attrs:{id:"是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[t._v("#")]),t._v(" 是什么")]),t._v(" "),r("p",[t._v("​\t熔断机制是对应雪崩效应的一种微服务链路保护机制。")]),t._v(" "),r("p",[t._v("​\t当扇出链路的某个微服务不可用或者响应时间太长时,会进行服务的降级，"),r("strong",[t._v("进而熔断该节点微服务的调用,快速返回错误的响应信息")]),t._v(" 。当检测到该节点微服务调用响应正常后恢复调用链路。在 SpringCloud框架里熔断机制通过 Hystrix实现。 Hystrix会监控微服务间调用的状况,当失败的调用到一定阈值,缺省是5秒内20次调用失败就会启动熔断机制。熔断机制的注解是@HystrixCommand.")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://github.com/Netflix/Hystrix/wiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方资料"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/llianlianpay/article/details/79768890",target:"_blank",rel:"noopener noreferrer"}},[t._v("7、何时进行服务熔断、服务降级、服务限流?_llianlianpay的博客-CSDN博客"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/l18848956739/article/details/100132409",target:"_blank",rel:"noopener noreferrer"}},[t._v("高并发架构设计之--「服务降级」、「服务限流」与「服务熔断」"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/missme-lina/p/10267770.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mock数据的基础使用"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/33f394c0ee2d",target:"_blank",rel:"noopener noreferrer"}},[t._v("应对接口级故障：服务降级、熔断、限流、排队"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/softidea/p/6346727.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("谈谈我对服务熔断、服务降级的理解 专题"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1457494",target:"_blank",rel:"noopener noreferrer"}},[t._v("高并发之服务降级与熔断"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/guanyuehao0107/p/11848286.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hystrix的服务熔断和服务降级"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_15-hystrix-服务降级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-hystrix-服务降级"}},[t._v("#")]),t._v(" 15. Hystrix：服务降级")]),t._v(" "),r("p",[r("strong",[t._v("服务熔断在服务端实现，而服务降级在客户端实现")])]),t._v(" "),r("ul",[r("li",[r("p",[t._v("服务熔断：服务端~ 某个服务超时或者异常，引起熔断~， 保险丝~")])]),t._v(" "),r("li",[r("p",[t._v("服务降级：客户端~ 从整体网站请求负载考虑，当某个服务熔断或者关闭后，服务将不再被调用。此时在客户端，我们可以准备一个FallbackFactory，返回一个默认的值（缺省值）")])])]),t._v(" "),r("h2",{attrs:{id:"_16-hystrix-dashboard流监控"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-hystrix-dashboard流监控"}},[t._v("#")]),t._v(" 16. Hystrix：Dashboard流监控")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/hejianjun/p/8670693.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("解决Hystrix Dashboard 一直是Loading ...的情况"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/Leon_Jinhai_Sun/article/details/100633310",target:"_blank",rel:"noopener noreferrer"}},[t._v("hystrix-dashboard"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/yufeng218/p/11489175.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("hystrixDashboard(服务监控)"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_17-zuul-路由网关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-zuul-路由网关"}},[t._v("#")]),t._v(" 17. Zuul：路由网关")]),t._v(" "),r("h3",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),r("h4",{attrs:{id:"什么是zuul"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是zuul"}},[t._v("#")]),t._v(" 什么是Zuul？")]),t._v(" "),r("p",[t._v("​\tZuul包含了对请求的路由和过滤两个最主要的功能：")]),t._v(" "),r("p",[t._v("​\t其中路由功能负责将外部请求转发到具体的微服务实例上,是实现外部访问统一入口的基础,而过滤器功能则负责对请求的处理过程进行干预,是实现请求校验,服务聚合等功能的基础。Zuul和Eureka进行整合,将Zuul自身注册为 Eureka服务治理下的应用,同时从Eureka中获得其他微服务的消息,也即以后的访问微服务都是通过Zuul跳转后获得。")]),t._v(" "),r("p",[t._v("​\t注意:Zuul服务最终还是会注册进Eureka")]),t._v(" "),r("p",[t._v("​\t提供:代理+路由+过滤三大功能!")]),t._v(" "),r("h4",{attrs:{id:"zuul能干嘛"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zuul能干嘛"}},[t._v("#")]),t._v(" Zuul能干嘛？")]),t._v(" "),r("ul",[r("li",[t._v("路由")]),t._v(" "),r("li",[t._v("过滤")])]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://github.com/Netflix/zuul",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_27384769/article/details/82991261",target:"_blank",rel:"noopener noreferrer"}},[t._v("ZUUL-API网关"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/ca76a4f396d1",target:"_blank",rel:"noopener noreferrer"}},[t._v("zuul路由网关"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"_18-config-git环境搭建"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-config-git环境搭建"}},[t._v("#")]),t._v(" 18. Config：Git环境搭建")]),t._v(" "),r("h3",{attrs:{id:"springcloud-config分布式配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-config分布式配置"}},[t._v("#")]),t._v(" SpringCloud config分布式配置")]),t._v(" "),r("h4",{attrs:{id:"概述-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述-2"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),r("h5",{attrs:{id:"分布式系统面临的-配置文件的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统面临的-配置文件的问题"}},[t._v("#")]),t._v(" 分布式系统面临的--配置文件的问题")]),t._v(" "),r("p",[t._v("​\t微服务意味着要将单体应用中的业务拆分成一个个子服务,每个服务的粒度相对较小,因此系统中会出现大量的服务,由于每个服务都需要必要的配置信息才能运行,所以一套集中式的,动态的配置管理设施是必不可少的。Spring Cloud提供了ConfigServer来解決这个问题,我们每一个微服务自己帯着一个application.yml,那上百的的配置文件要修改起来,岂不是要发疯!")]),t._v(" "),r("h5",{attrs:{id:"什么是springcloud-config分布式配置中心"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是springcloud-config分布式配置中心"}},[t._v("#")]),t._v(" 什么是SpringCloud config分布式配置中心")]),t._v(" "),r("p",[t._v("​\tSpring Cloud Config为微服务架构中的微服务提供集中化的外部配置支持,配置服务器为"),r("strong",[t._v("各个不同微服务应用")]),t._v("的所有环节提供了一个"),r("strong",[t._v("中心化的外部配置")]),t._v("。")]),t._v(" "),r("p",[t._v("​\tSpring Cloud Config分为"),r("strong",[t._v("服务端")]),t._v("和"),r("strong",[t._v("客户端")]),t._v("两部分")]),t._v(" "),r("p",[t._v("​\t服务端也称为分布式配置中心,它是一个独立的微服务应用,用来连接配置服务器并为客户端提供获取配置信息,加密,解密信息等访问接口。")]),t._v(" "),r("p",[t._v("​\t客户端则是通过指定的配置中心来管理应用资源,以及与业务相关的配置内容,并在启动的时候从配置中心获取和加载配置信息。配置服务器默认采用git来存储配置信息,这样就有助于对环境配置进行版本管理。并且可以通过git客户端工具来方便的管理和访问配置内容。")]),t._v(" "),r("h5",{attrs:{id:"springcloud-config分布式配置中心能干嘛"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-config分布式配置中心能干嘛"}},[t._v("#")]),t._v(" SpringCloud config分布式配置中心能干嘛")]),t._v(" "),r("ul",[r("li",[t._v("集中管理配置文件")]),t._v(" "),r("li",[t._v("不同环境,不同配置,动态化的配置更新,分环境部署,比如 /dev /test /prod /beta /release")]),t._v(" "),r("li",[t._v("运行期间动态调整配置,不再需要在每个服务部署的机器上编写配置文件,服务会向配置中心统一拉取配置自己的信息。")]),t._v(" "),r("li",[t._v("当配置发生变动时,服务不需要重启,即可感知到配置的变化,并应用新的配置")]),t._v(" "),r("li",[t._v("将配置信息以REST接口的形式暴露")])]),t._v(" "),r("h5",{attrs:{id:"spring-cloud-config分布式配置中心与github整合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-config分布式配置中心与github整合"}},[t._v("#")]),t._v(" Spring Cloud config分布式配置中心与github整合")]),t._v(" "),r("p",[t._v("​\t由于Spring Cloud Config默认使用Git来存储配置文件(也有其他方式,比如支持SVN和本地文件),但是最推荐的还是Git,而且使用的是http / https访可的形式")]),t._v(" "),r("h2",{attrs:{id:"_19-config-服务端链接git配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-config-服务端链接git配置"}},[t._v("#")]),t._v(" 19. Config：服务端链接Git配置")]),t._v(" "),r("h2",{attrs:{id:"_20-config-客户端连接服务端访问远程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-config-客户端连接服务端访问远程"}},[t._v("#")]),t._v(" 20. Config：客户端连接服务端访问远程")]),t._v(" "),r("ul",[r("li",[t._v("bootstrap.yml 系统级配置")]),t._v(" "),r("li",[t._v("application.yml 用户级配置")])]),t._v(" "),r("p",[t._v("配置与代码分离，解耦")]),t._v(" "),r("h2",{attrs:{id:"_21-config-远程配置实战测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-config-远程配置实战测试"}},[t._v("#")]),t._v(" 21. Config：远程配置实战测试")]),t._v(" "),r("h2",{attrs:{id:"_22-springcloud总结与展望"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-springcloud总结与展望"}},[t._v("#")]),t._v(" 22. SpringCloud总结与展望")]),t._v(" "),r("h3",{attrs:{id:"springcloud"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springcloud"}},[t._v("#")]),t._v(" SpringCloud：")]),t._v(" "),r("ul",[r("li",[t._v("知识点")]),t._v(" "),r("li",[t._v("看看面试题")]),t._v(" "),r("li",[t._v("微服务和微服务架构")]),t._v(" "),r("li",[t._v("Euerka AP\n"),r("ul",[r("li",[t._v("集群配置")]),t._v(" "),r("li",[t._v("对比ZooKeeper CP")])])]),t._v(" "),r("li",[t._v("Ribbon （IRule负载均衡决策）")]),t._v(" "),r("li",[t._v("Feign 接口、社区要求、更加面向接口编程")]),t._v(" "),r("li",[t._v("Hystrix\n"),r("ul",[r("li",[t._v("熔断")]),t._v(" "),r("li",[t._v("降级")]),t._v(" "),r("li",[t._v("dashboard")])])]),t._v(" "),r("li",[t._v("Zuul")]),t._v(" "),r("li",[t._v("Spring Cloud Config （C-S-GIT）")])]),t._v(" "),r("h3",{attrs:{id:"开发流程套路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开发流程套路"}},[t._v("#")]),t._v(" 开发流程套路")]),t._v(" "),r("ol",[r("li",[t._v("导入依赖")]),t._v(" "),r("li",[t._v("编写配置")]),t._v(" "),r("li",[t._v("@EnableXXX等")])]),t._v(" "),r("h3",{attrs:{id:"未来发展方向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#未来发展方向"}},[t._v("#")]),t._v(" 未来发展方向：")]),t._v(" "),r("ul",[r("li",[t._v("框架源码")]),t._v(" "),r("li",[t._v("设计模式")]),t._v(" "),r("li",[t._v("新知识探索")]),t._v(" "),r("li",[t._v("Java新特性")]),t._v(" "),r("li",[t._v("Netty / MyCat / Http")]),t._v(" "),r("li",[t._v("JVM")])]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_33589510/article/details/102020934",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Alibaba 实战(四) - NACOS 服务发现与注册中心"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/wanghaokun/p/10366689.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("redis集群架构（含面试题解析）"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/Websphere_zxf/article/details/92833670",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ribbon与Nginx区别"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://my.oschina.net/u/3420587/blog/893140",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringCloudConfig私有库服务端搭建"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/forezp/p/10414586.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("spring cloud config将配置存储在数据库中"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/majipeng19950610/article/details/89358448",target:"_blank",rel:"noopener noreferrer"}},[t._v("maven多模块打包---必成功"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/weixin_34556470/article/details/85001182",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker SpringCloud微服务集群 Eureka、Config、Zuul"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://bbs.csdn.net/topics/393081770",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于docker里面为什么要运行linux容器的疑问？求大神科普。"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/llsmingyi/article/details/79255373",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker的宿主系统是centos，为什么可以运行ubuntu的镜像呢？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.v2ex.com/t/636092",target:"_blank",rel:"noopener noreferrer"}},[t._v("请教为什么大多数使用 docker 是在 ubuntu/debian, 而 centos 下很少"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/32160729?sort=created",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker中选择CentOS还是Ubuntu/Debian？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.linuxidc.com/Linux/2018-12/155993.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker上定制CentOS7镜像"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/love_zngy/article/details/82216696",target:"_blank",rel:"noopener noreferrer"}},[t._v("springcloud(十三)：注册中心 Consul 使用详解"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/dreamingodd/p/7737318.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud官方文档中文版-Spring Cloud Config（上）-服务端（配置中心）"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.oschina.net/question/2489154_2283940",target:"_blank",rel:"noopener noreferrer"}},[t._v("spring-cloud-starter-security与spring-boot-starter-security有什么不同？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.koofun.com/pro/queanswers?proquestionId=7505",target:"_blank",rel:"noopener noreferrer"}},[t._v("我们能否在 spring-boot-starter-web 中用 jetty 代替 tomcat？"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"x1-开发中遇到的坑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#x1-开发中遇到的坑"}},[t._v("#")]),t._v(" X1. 开发中遇到的坑")]),t._v(" "),r("ol",[r("li",[t._v("springcloud多模块项目，每个项目执行maven package后生成的jar包大小很小，并不是可执行的jar包。")])]),t._v(" "),r("ul",[r("li",[t._v("解决方案(修改pom依赖文件)：\n"),r("ol",[r("li",[t._v("spring-boot-maven-plugin的版本使用与当前springgboot相符合的")]),t._v(" "),r("li",[t._v("下面的"),r("code",[t._v("<configuration>")]),t._v("里面的"),r("code",[t._v("mainClass")]),t._v("修改值为自己服务启动类的全限制类名")])])])]),t._v(" "),r("div",{staticClass:"language-xml line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-xml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 修改原本的build字段 --\x3e")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("build")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugins")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugin")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-maven-plugin"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${springboot.version}"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("configuration")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 指定该Main Class为全局的唯一入口 --\x3e")]),t._v("\n                "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mainClass")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.ash.springcloud.TestApplication"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mainClass")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("layout")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("ZIP"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("layout")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("configuration")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("executions")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("execution")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("goals")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                        "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("goal")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("repackage"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("goal")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--可以把依赖的包都打包到生成的Jar包中--\x3e")]),t._v("\n                    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("goals")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("execution")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("executions")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("plugin")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("plugins")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("build")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br"),r("span",{staticClass:"line-number"},[t._v("9")]),r("br"),r("span",{staticClass:"line-number"},[t._v("10")]),r("br"),r("span",{staticClass:"line-number"},[t._v("11")]),r("br"),r("span",{staticClass:"line-number"},[t._v("12")]),r("br"),r("span",{staticClass:"line-number"},[t._v("13")]),r("br"),r("span",{staticClass:"line-number"},[t._v("14")]),r("br"),r("span",{staticClass:"line-number"},[t._v("15")]),r("br"),r("span",{staticClass:"line-number"},[t._v("16")]),r("br"),r("span",{staticClass:"line-number"},[t._v("17")]),r("br"),r("span",{staticClass:"line-number"},[t._v("18")]),r("br"),r("span",{staticClass:"line-number"},[t._v("19")]),r("br"),r("span",{staticClass:"line-number"},[t._v("20")]),r("br"),r("span",{staticClass:"line-number"},[t._v("21")]),r("br"),r("span",{staticClass:"line-number"},[t._v("22")]),r("br"),r("span",{staticClass:"line-number"},[t._v("23")]),r("br")])]),r("ol",{attrs:{start:"2"}},[r("li",[t._v("共用的api模块，比如存放pojo、工具类utils，如果用Feign可能还存放service接口等。这个打包不需要生成可执行文件，但是记得，别的module模块要是使用到其po类等，需要在pom依赖文件中声明")])]),t._v(" "),r("div",{staticClass:"language-xml line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-xml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- api，示例如下，根据自己实际的api模块修改对应的3个值 --\x3e")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.ash.springcloud"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("http-api-n0-0000"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("0.0.1-SNAPSHOT"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br")])]),r("ol",{attrs:{start:"3"}},[r("li",[t._v("引用到公共api模块的项目，除了在pom声明外，如果该项目mvn package成执行jar包，找不到po类之类的，那就是之前没有对api模块执行mvn clean -> mvn install。install才能把之前的公共api模块存到本地maven仓库，这时候别的模块的pom对api模块依赖才算真正起到作用（指可执行jar包可以使用到公共的po类）")])]),t._v(" "),r("ul",[r("li",[t._v("api模块不需要打成可执行jar包，所以不需要在自带的"),r("code",[t._v("spring-boot-maven-plugin")]),t._v("里配置"),r("code",[t._v("mainClass")]),t._v("等")])]),t._v(" "),r("div",{staticClass:"language-xml line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-xml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("build")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugins")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugin")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-maven-plugin"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("plugin")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("plugins")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("build")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br")])]),r("ul",[r("li",[t._v("假如provider用到了api模块的po类，那么要生成provider的可执行jar包需要执行以下几步骤\n"),r("ol",[r("li",[t._v("对api模块执行 mvn clean -> mvn install（注意一定要记得每次都install，因为我之前有次忘记install结果用的旧的api的po类，打包没问题，但是运行项目mybatis提示mapper里面的属性却好啊setter之类的。因为用的不是最新的po类！！）")]),t._v(" "),r("li",[t._v("provider的pom依赖中打包插件"),r("code",[t._v("spring-boot-maven-plugin")]),t._v("里配置"),r("code",[t._v("mainClass")]),t._v("等属性（前面提过了）。")]),t._v(" "),r("li",[t._v("provider模块执行 mvn clean -> mvn package就可以生成而执行jar包了")])])])]),t._v(" "),r("ol",{attrs:{start:"4"}},[r("li",[t._v("项目布置在几台不同公网IP的服务器，每个Eureka互相注册，需要用到真实ip。")])]),t._v(" "),r("div",{staticClass:"language-yaml line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-yaml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务启动项")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7001")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#spring配置")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("eureka"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dev"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7001")]),t._v("\n "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# security: # 使得Eureka需要账号密码才能访问 ,没有用到 security依赖就不用。之前文章应该有提过这个配置了")]),t._v("\n "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   user:")]),t._v("\n "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     name: test")]),t._v("\n "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: 123456")]),t._v("\n "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     roles: SUPERUSER")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#eureka配置")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("eureka")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable-self-preservation")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("eureka"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7001")]),t._v(" \n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("appname")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("eureka"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7001")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance-id")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" n1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("XXX.YYY.ZZZ.NNN\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prefer-ip-address")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用真实的ip注册")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ip-address")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" XXX.YYY.ZZZ.NNN "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 真实的公网ip")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("client")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service-url")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单机 defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址（单机）。")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaultZone")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这个自己根据实际情况配置了")]),t._v("\n\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br"),r("span",{staticClass:"line-number"},[t._v("9")]),r("br"),r("span",{staticClass:"line-number"},[t._v("10")]),r("br"),r("span",{staticClass:"line-number"},[t._v("11")]),r("br"),r("span",{staticClass:"line-number"},[t._v("12")]),r("br"),r("span",{staticClass:"line-number"},[t._v("13")]),r("br"),r("span",{staticClass:"line-number"},[t._v("14")]),r("br"),r("span",{staticClass:"line-number"},[t._v("15")]),r("br"),r("span",{staticClass:"line-number"},[t._v("16")]),r("br"),r("span",{staticClass:"line-number"},[t._v("17")]),r("br"),r("span",{staticClass:"line-number"},[t._v("18")]),r("br"),r("span",{staticClass:"line-number"},[t._v("19")]),r("br"),r("span",{staticClass:"line-number"},[t._v("20")]),r("br"),r("span",{staticClass:"line-number"},[t._v("21")]),r("br"),r("span",{staticClass:"line-number"},[t._v("22")]),r("br"),r("span",{staticClass:"line-number"},[t._v("23")]),r("br"),r("span",{staticClass:"line-number"},[t._v("24")]),r("br"),r("span",{staticClass:"line-number"},[t._v("25")]),r("br"),r("span",{staticClass:"line-number"},[t._v("26")]),r("br"),r("span",{staticClass:"line-number"},[t._v("27")]),r("br"),r("span",{staticClass:"line-number"},[t._v("28")]),r("br"),r("span",{staticClass:"line-number"},[t._v("29")]),r("br"),r("span",{staticClass:"line-number"},[t._v("30")]),r("br"),r("span",{staticClass:"line-number"},[t._v("31")]),r("br")])]),r("ol",{attrs:{start:"5"}},[r("li",[t._v("Provider注册到Eureka后，Ribbon根据服务名访问不到")])]),t._v(" "),r("ul",[r("li",[t._v("可能是没有设置"),r("code",[t._v("spring.application.name")]),t._v("属性，Ribbon负载均衡要用到的serviceId就是这个。")]),t._v(" "),r("li",[t._v("因为是不同公网IP服务器，加上如果用到docker之类的，Eureka会识别成本地局域网网桥的ip地址，需要自己手动配置")])]),t._v(" "),r("div",{staticClass:"language-yaml line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-yaml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务启动项")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v("\n  \n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# spring配置")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prod\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("provider"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n1 "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ribbon负载均衡要用到的serviceId就是这个")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.alibaba.druid.pool.DruidDataSource\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.cj.jdbc.Driver "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用的mysql 8")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//服务器IP"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306/表名"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("useUnicode=true"),r("span",{pre:!0,attrs:{class:"token important"}},[t._v("&serverTimezone=Asia/Shanghai&characterEncoding=UTF-8&useSSL=false")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 数据库账号\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 数据库密码\n  \n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mybatis配置")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mybatis")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type-aliases-package")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.ash.springcloud.po\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config-location")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" classpath"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mybatis/mybatis"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config.xml\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mapper-locations")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" classpath"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mybatis/mapper/"),r("span",{pre:!0,attrs:{class:"token important"}},[t._v("*.xml")]),t._v("\n  \n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#eureka配置")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("eureka")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("appname")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("provider"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n1\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance-id")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" n1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("XXX.YYY.ZZZ.NNN\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prefer-ip-address")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ip-address")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 你的服务器公网ip  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务提供者通过我们自己指定的ip注册到Eureka")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("non-secure-port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 你的服务用到的端口port "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务提供者通过我们自己指定的port注册到Eureka")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("client")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service-url")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaultZone")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个根据你自己的实际配置")]),t._v("\n  \n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#info配置")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#点击Eureka的页面的服务的Status进入的页面显示的信息")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.name")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" provider\n  "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("author")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ash\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br"),r("span",{staticClass:"line-number"},[t._v("9")]),r("br"),r("span",{staticClass:"line-number"},[t._v("10")]),r("br"),r("span",{staticClass:"line-number"},[t._v("11")]),r("br"),r("span",{staticClass:"line-number"},[t._v("12")]),r("br"),r("span",{staticClass:"line-number"},[t._v("13")]),r("br"),r("span",{staticClass:"line-number"},[t._v("14")]),r("br"),r("span",{staticClass:"line-number"},[t._v("15")]),r("br"),r("span",{staticClass:"line-number"},[t._v("16")]),r("br"),r("span",{staticClass:"line-number"},[t._v("17")]),r("br"),r("span",{staticClass:"line-number"},[t._v("18")]),r("br"),r("span",{staticClass:"line-number"},[t._v("19")]),r("br"),r("span",{staticClass:"line-number"},[t._v("20")]),r("br"),r("span",{staticClass:"line-number"},[t._v("21")]),r("br"),r("span",{staticClass:"line-number"},[t._v("22")]),r("br"),r("span",{staticClass:"line-number"},[t._v("23")]),r("br"),r("span",{staticClass:"line-number"},[t._v("24")]),r("br"),r("span",{staticClass:"line-number"},[t._v("25")]),r("br"),r("span",{staticClass:"line-number"},[t._v("26")]),r("br"),r("span",{staticClass:"line-number"},[t._v("27")]),r("br"),r("span",{staticClass:"line-number"},[t._v("28")]),r("br"),r("span",{staticClass:"line-number"},[t._v("29")]),r("br"),r("span",{staticClass:"line-number"},[t._v("30")]),r("br"),r("span",{staticClass:"line-number"},[t._v("31")]),r("br"),r("span",{staticClass:"line-number"},[t._v("32")]),r("br"),r("span",{staticClass:"line-number"},[t._v("33")]),r("br"),r("span",{staticClass:"line-number"},[t._v("34")]),r("br"),r("span",{staticClass:"line-number"},[t._v("35")]),r("br"),r("span",{staticClass:"line-number"},[t._v("36")]),r("br"),r("span",{staticClass:"line-number"},[t._v("37")]),r("br"),r("span",{staticClass:"line-number"},[t._v("38")]),r("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);